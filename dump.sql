--------------------------------------------------------
--  File created - четверг-июля-11-2024   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Sequence ACT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GARIN"."ACT_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence AUDIT_ACTION_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GARIN"."AUDIT_ACTION_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 101 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence CART_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GARIN"."CART_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence CNSMR_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GARIN"."CNSMR_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 101 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence GAME_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GARIN"."GAME_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence GRP_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GARIN"."GRP_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence LOGACT_ACTION_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GARIN"."LOGACT_ACTION_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence REVIEW_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GARIN"."REVIEW_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Sequence USR_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GARIN"."USR_SEQ"  MINVALUE 1 MAXVALUE 999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;
--------------------------------------------------------
--  DDL for Table ACTION
--------------------------------------------------------

  CREATE TABLE "GARIN"."ACTION" SHARING=METADATA 
   (	"ACT_ID" NUMBER, 
	"ACT_PARENT" NUMBER, 
	"ACT_NAME" VARCHAR2(36 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "GARIN"."ACTION"."ACT_ID" IS 'Идентификатор действия';
   COMMENT ON COLUMN "GARIN"."ACTION"."ACT_PARENT" IS 'Идентификатор родительского действия';
   COMMENT ON COLUMN "GARIN"."ACTION"."ACT_NAME" IS 'Наименование действия';
   COMMENT ON TABLE "GARIN"."ACTION"  IS 'Список действий';
--------------------------------------------------------
--  DDL for Table AUDIT_ACTION
--------------------------------------------------------

  CREATE TABLE "GARIN"."AUDIT_ACTION" 
   (	"AUDACT_ID" NUMBER, 
	"AUDACT_NAME" VARCHAR2(250 BYTE), 
	"AUDACT_DATE" DATE DEFAULT SYSDATE, 
	"AUDACT_USER" VARCHAR2(32 BYTE) DEFAULT USER, 
	"AUDACT_COMM" VARCHAR2(250 BYTE), 
	"AUDACT_TABLE" VARCHAR2(64 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "GARIN"."AUDIT_ACTION"."AUDACT_ID" IS 'Идентификатор действия';
   COMMENT ON COLUMN "GARIN"."AUDIT_ACTION"."AUDACT_NAME" IS 'Действие';
   COMMENT ON COLUMN "GARIN"."AUDIT_ACTION"."AUDACT_DATE" IS 'Дата действия';
   COMMENT ON COLUMN "GARIN"."AUDIT_ACTION"."AUDACT_USER" IS 'Пользователь';
   COMMENT ON COLUMN "GARIN"."AUDIT_ACTION"."AUDACT_COMM" IS 'Комментарии';
   COMMENT ON COLUMN "GARIN"."AUDIT_ACTION"."AUDACT_TABLE" IS 'Тиблица';
   COMMENT ON TABLE "GARIN"."AUDIT_ACTION"  IS 'Тиблица действий аудитов';
--------------------------------------------------------
--  DDL for Table AUDIT_DATA
--------------------------------------------------------

  CREATE TABLE "GARIN"."AUDIT_DATA" 
   (	"AUDDAT_ID" NUMBER, 
	"AUDDAT_OPER" CHAR(1 BYTE), 
	"AUDDAT_TABLE" VARCHAR2(64 BYTE), 
	"AUDDAT_FIELD" VARCHAR2(32 BYTE), 
	"AUDDAT_OLDVAL" VARCHAR2(250 BYTE), 
	"AUDDAT_NEWVAL" VARCHAR2(250 BYTE), 
	"AUDDAT_COMM" VARCHAR2(250 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "GARIN"."AUDIT_DATA"."AUDDAT_ID" IS 'Идентификатор действия';
   COMMENT ON COLUMN "GARIN"."AUDIT_DATA"."AUDDAT_OPER" IS 'Тип действия (I - добавлние, U - изменение, D - удаление)';
   COMMENT ON COLUMN "GARIN"."AUDIT_DATA"."AUDDAT_TABLE" IS 'Название таблицы';
   COMMENT ON COLUMN "GARIN"."AUDIT_DATA"."AUDDAT_FIELD" IS 'Название поля';
   COMMENT ON COLUMN "GARIN"."AUDIT_DATA"."AUDDAT_OLDVAL" IS 'Старое значение';
   COMMENT ON COLUMN "GARIN"."AUDIT_DATA"."AUDDAT_NEWVAL" IS 'Новое значение';
   COMMENT ON COLUMN "GARIN"."AUDIT_DATA"."AUDDAT_COMM" IS 'Комментарий';
   COMMENT ON TABLE "GARIN"."AUDIT_DATA"  IS 'Таблица данных аудитов
';
--------------------------------------------------------
--  DDL for Table AUDIT_ENTITIES
--------------------------------------------------------

  CREATE TABLE "GARIN"."AUDIT_ENTITIES" 
   (	"AUD_NAME" VARCHAR2(40 BYTE), 
	"AUD_MODE" CHAR(1 BYTE) DEFAULT 'N', 
	"ATABLE" VARCHAR2(40 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "GARIN"."AUDIT_ENTITIES"."AUD_NAME" IS 'Имя cущьности';
   COMMENT ON COLUMN "GARIN"."AUDIT_ENTITIES"."AUD_MODE" IS 'Включен (Y)/Выключен(N)';
   COMMENT ON COLUMN "GARIN"."AUDIT_ENTITIES"."ATABLE" IS 'Имя таблицы';
   COMMENT ON TABLE "GARIN"."AUDIT_ENTITIES"  IS 'Таблица учёта всех триггеров';
--------------------------------------------------------
--  DDL for Table cart
--------------------------------------------------------

  CREATE TABLE "GARIN"."cart" SHARING=METADATA 
   (	"ID" NUMBER, 
	"USER_ID" NUMBER
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;

   COMMENT ON TABLE "GARIN"."cart"  IS 'Таблица корзин пользователей';
--------------------------------------------------------
--  DDL for Table cart_item
--------------------------------------------------------

  CREATE TABLE "GARIN"."cart_item" SHARING=METADATA 
   (	"CART_ID" NUMBER, 
	"GAME_ID" NUMBER, 
	"QUANTITY" NUMBER DEFAULT 1
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;

   COMMENT ON TABLE "GARIN"."cart_item"  IS 'Тиблица заказов пользователей';
--------------------------------------------------------
--  DDL for Table consumer
--------------------------------------------------------

  CREATE TABLE "GARIN"."consumer" 
   (	"ID" NUMBER, 
	"USERNAME" VARCHAR2(100 BYTE), 
	"EMAIL" VARCHAR2(100 BYTE), 
	"PASSWORD_HASH" VARCHAR2(250 BYTE), 
	"FNAME" VARCHAR2(60 BYTE), 
	"LNAME" VARCHAR2(60 BYTE), 
	"REG_DATE" DATE DEFAULT SYSDATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON TABLE "GARIN"."consumer"  IS 'Таблица пользователей';
--------------------------------------------------------
--  DDL for Table game
--------------------------------------------------------

  CREATE TABLE "GARIN"."game" 
   (	"ID" NUMBER, 
	"TITLE" VARCHAR2(64 BYTE), 
	"DESCRIPTION" VARCHAR2(250 BYTE), 
	"DEVELOPER_NAME" VARCHAR2(64 BYTE), 
	"RATING" NUMBER DEFAULT 0, 
	"REL_DATE" DATE DEFAULT SYSDATE
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;

   COMMENT ON TABLE "GARIN"."game"  IS 'Таблица игр';
--------------------------------------------------------
--  DDL for Table GRP_MEMBER
--------------------------------------------------------

  CREATE TABLE "GARIN"."GRP_MEMBER" SHARING=METADATA 
   (	"GRP_ID" NUMBER, 
	"USR_ID" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "GARIN"."GRP_MEMBER"."GRP_ID" IS 'Идентификатор группы';
   COMMENT ON COLUMN "GARIN"."GRP_MEMBER"."USR_ID" IS 'Идентификатор пользователя';
   COMMENT ON TABLE "GARIN"."GRP_MEMBER"  IS 'Вхождение пользователей в группы по действиям';
--------------------------------------------------------
--  DDL for Table GRP_RIGHT
--------------------------------------------------------

  CREATE TABLE "GARIN"."GRP_RIGHT" SHARING=METADATA 
   (	"ACT_ID" NUMBER, 
	"GRP_ID" NUMBER
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "GARIN"."GRP_RIGHT"."ACT_ID" IS 'Идентификатор действия';
   COMMENT ON COLUMN "GARIN"."GRP_RIGHT"."GRP_ID" IS 'Идентификатор группы';
   COMMENT ON TABLE "GARIN"."GRP_RIGHT"  IS 'Разрешения действий для группы';
--------------------------------------------------------
--  DDL for Table library
--------------------------------------------------------

  CREATE TABLE "GARIN"."library" SHARING=METADATA 
   (	"CNSMR_ID" NUMBER, 
	"GAME_ID" NUMBER, 
	"ADDED_DATE" DATE DEFAULT SYSDATE, 
	"HOURS_IN_GAME" NUMBER DEFAULT 0
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;

   COMMENT ON TABLE "GARIN"."library"  IS 'Таблица библиотек игр пользователей';
--------------------------------------------------------
--  DDL for Table LOGACT_ACTION
--------------------------------------------------------

  CREATE TABLE "GARIN"."LOGACT_ACTION" 
   (	"LOGACT_ID" NUMBER, 
	"LOGACT_NAME" VARCHAR2(250 BYTE), 
	"LOGACT_USER" VARCHAR2(32 BYTE) DEFAULT USER, 
	"LOGACT_DATE" DATE DEFAULT SYSDATE, 
	"LOGACT_TABLE" VARCHAR2(64 BYTE), 
	"LOGACT_OP" CHAR(1 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON TABLE "GARIN"."LOGACT_ACTION"  IS 'Таблица действий журнала';
--------------------------------------------------------
--  DDL for Table LOGACT_DATA
--------------------------------------------------------

  CREATE TABLE "GARIN"."LOGACT_DATA" 
   (	"LOGDAT_ID" NUMBER, 
	"LOGDAT_TABLE" VARCHAR2(64 BYTE), 
	"NEW_ID" NUMBER, 
	"NEW_USERNAME" VARCHAR2(64 BYTE), 
	"NEW_EMAIL" VARCHAR2(64 BYTE), 
	"NEW_PASSWORD_HASH" VARCHAR2(64 BYTE), 
	"NEW_FNAME" VARCHAR2(64 BYTE), 
	"NEW_LNAME" VARCHAR2(20 BYTE), 
	"NEW_REG_DATE" DATE, 
	"OLD_ID" NUMBER, 
	"OLD_USERNAME" VARCHAR2(64 BYTE), 
	"OLD_EMAIL" VARCHAR2(64 BYTE), 
	"OLD_FNAME" VARCHAR2(64 BYTE), 
	"OLD_LNAME" VARCHAR2(64 BYTE), 
	"OLD_PASSWORD_HASH" VARCHAR2(64 BYTE), 
	"OLD_REG_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON TABLE "GARIN"."LOGACT_DATA"  IS 'Таблица данных журнала действий';
--------------------------------------------------------
--  DDL for Table review
--------------------------------------------------------

  CREATE TABLE "GARIN"."review" SHARING=METADATA 
   (	"ID" NUMBER, 
	"CNSMR_ID" NUMBER, 
	"GAME_ID" NUMBER, 
	"RATING" NUMBER, 
	"TEXT_COMMENT" VARCHAR2(1000 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;

   COMMENT ON TABLE "GARIN"."review"  IS 'Таблица отзывов пользователей';
--------------------------------------------------------
--  DDL for Table USR
--------------------------------------------------------

  CREATE TABLE "GARIN"."USR" 
   (	"USR_ID" NUMBER, 
	"USER_NAME" VARCHAR2(20 BYTE), 
	"LNAME" VARCHAR2(20 BYTE), 
	"FNAME" VARCHAR2(20 BYTE), 
	"PHONENUMBER" VARCHAR2(36 BYTE), 
	"EMAIL" VARCHAR2(64 BYTE), 
	"ADDRESS" VARCHAR2(36 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "GARIN"."USR"."USR_ID" IS 'Уникальный номер пользователя
';
   COMMENT ON COLUMN "GARIN"."USR"."USER_NAME" IS 'Логин';
   COMMENT ON COLUMN "GARIN"."USR"."LNAME" IS 'Фамилия';
   COMMENT ON COLUMN "GARIN"."USR"."FNAME" IS 'Имя';
   COMMENT ON TABLE "GARIN"."USR"  IS 'Таблица пользователей административной части';
--------------------------------------------------------
--  DDL for Table USRGROUP
--------------------------------------------------------

  CREATE TABLE "GARIN"."USRGROUP" SHARING=METADATA 
   (	"GRP_ID" NUMBER, 
	"GRP_NAME" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;

   COMMENT ON COLUMN "GARIN"."USRGROUP"."GRP_ID" IS 'Идентификатор группы';
   COMMENT ON COLUMN "GARIN"."USRGROUP"."GRP_NAME" IS 'Наименование группы';
   COMMENT ON TABLE "GARIN"."USRGROUP"  IS 'Группы пользователей';
--------------------------------------------------------
--  DDL for View CART
--------------------------------------------------------

  CREATE OR REPLACE FORCE NONEDITIONABLE VIEW "GARIN"."CART" ("ID", "USER_ID") AS 
  SELECT "ID","USER_ID" FROM "cart"
;
--------------------------------------------------------
--  DDL for View CART_ITEM
--------------------------------------------------------

  CREATE OR REPLACE FORCE NONEDITIONABLE VIEW "GARIN"."CART_ITEM" ("CART_ID", "GAME_ID", "QUANTITY") AS 
  SELECT "CART_ID","GAME_ID","QUANTITY" FROM "cart_item"
;
--------------------------------------------------------
--  DDL for View CONSUMER
--------------------------------------------------------

  CREATE OR REPLACE FORCE NONEDITIONABLE VIEW "GARIN"."CONSUMER" ("ID", "USERNAME", "EMAIL", "PASSWORD_HASH", "FNAME", "LNAME", "REG_DATE") AS 
  SELECT "ID","USERNAME","EMAIL","PASSWORD_HASH","FNAME","LNAME","REG_DATE" FROM "consumer"
;
--------------------------------------------------------
--  DDL for View GAME
--------------------------------------------------------

  CREATE OR REPLACE FORCE NONEDITIONABLE VIEW "GARIN"."GAME" ("ID", "TITLE", "DESCRIPTION", "DEVELOPER_NAME", "RATING", "REL_DATE") AS 
  SELECT "ID","TITLE","DESCRIPTION","DEVELOPER_NAME","RATING","REL_DATE" FROM "game"
;
--------------------------------------------------------
--  DDL for View LIBRARY
--------------------------------------------------------

  CREATE OR REPLACE FORCE NONEDITIONABLE VIEW "GARIN"."LIBRARY" ("CNSMR_ID", "GAME_ID", "ADDED_DATE", "HOURS_IN_GAME") AS 
  SELECT "CNSMR_ID","GAME_ID","ADDED_DATE","HOURS_IN_GAME" FROM "library"
;
--------------------------------------------------------
--  DDL for View REVIEW
--------------------------------------------------------

  CREATE OR REPLACE FORCE NONEDITIONABLE VIEW "GARIN"."REVIEW" ("ID", "CNSMR_ID", "GAME_ID", "RATING", "TEXT_COMMENT") AS 
  SELECT "ID","CNSMR_ID","GAME_ID","RATING","TEXT_COMMENT" FROM "review"
;
REM INSERTING into GARIN.ACTION
SET DEFINE OFF;
REM INSERTING into GARIN.AUDIT_ACTION
SET DEFINE OFF;
Insert into GARIN.AUDIT_ACTION (AUDACT_ID,AUDACT_NAME,AUDACT_DATE,AUDACT_USER,AUDACT_COMM,AUDACT_TABLE) values ('21','Добавление пользователя',to_date('04.07.24','DD.MM.RR'),'GARIN',null,'consumer');
Insert into GARIN.AUDIT_ACTION (AUDACT_ID,AUDACT_NAME,AUDACT_DATE,AUDACT_USER,AUDACT_COMM,AUDACT_TABLE) values ('22','Удаление пользователя',to_date('04.07.24','DD.MM.RR'),'GARIN',null,'consumer');
Insert into GARIN.AUDIT_ACTION (AUDACT_ID,AUDACT_NAME,AUDACT_DATE,AUDACT_USER,AUDACT_COMM,AUDACT_TABLE) values ('23','Добавление пользователя',to_date('04.07.24','DD.MM.RR'),'GARIN',null,'consumer');
Insert into GARIN.AUDIT_ACTION (AUDACT_ID,AUDACT_NAME,AUDACT_DATE,AUDACT_USER,AUDACT_COMM,AUDACT_TABLE) values ('24','Удаление пользователя',to_date('04.07.24','DD.MM.RR'),'GARIN',null,'consumer');
Insert into GARIN.AUDIT_ACTION (AUDACT_ID,AUDACT_NAME,AUDACT_DATE,AUDACT_USER,AUDACT_COMM,AUDACT_TABLE) values ('25','Добавление пользователя',to_date('04.07.24','DD.MM.RR'),'GARIN',null,'consumer');
Insert into GARIN.AUDIT_ACTION (AUDACT_ID,AUDACT_NAME,AUDACT_DATE,AUDACT_USER,AUDACT_COMM,AUDACT_TABLE) values ('26','Удаление пользователя',to_date('04.07.24','DD.MM.RR'),'GARIN',null,'consumer');
Insert into GARIN.AUDIT_ACTION (AUDACT_ID,AUDACT_NAME,AUDACT_DATE,AUDACT_USER,AUDACT_COMM,AUDACT_TABLE) values ('27','Добавление пользователя',to_date('04.07.24','DD.MM.RR'),'GARIN',null,'consumer');
Insert into GARIN.AUDIT_ACTION (AUDACT_ID,AUDACT_NAME,AUDACT_DATE,AUDACT_USER,AUDACT_COMM,AUDACT_TABLE) values ('28','Удаление пользователя',to_date('04.07.24','DD.MM.RR'),'GARIN',null,'consumer');
Insert into GARIN.AUDIT_ACTION (AUDACT_ID,AUDACT_NAME,AUDACT_DATE,AUDACT_USER,AUDACT_COMM,AUDACT_TABLE) values ('1','Добавление пользователя',to_date('27.06.24','DD.MM.RR'),'GARIN',null,'USR');
Insert into GARIN.AUDIT_ACTION (AUDACT_ID,AUDACT_NAME,AUDACT_DATE,AUDACT_USER,AUDACT_COMM,AUDACT_TABLE) values ('2','Изменение пользователя',to_date('27.06.24','DD.MM.RR'),'GARIN',null,'USR');
Insert into GARIN.AUDIT_ACTION (AUDACT_ID,AUDACT_NAME,AUDACT_DATE,AUDACT_USER,AUDACT_COMM,AUDACT_TABLE) values ('3','Удаление пользователя',to_date('27.06.24','DD.MM.RR'),'GARIN',null,'USR');
Insert into GARIN.AUDIT_ACTION (AUDACT_ID,AUDACT_NAME,AUDACT_DATE,AUDACT_USER,AUDACT_COMM,AUDACT_TABLE) values ('4','Добавление пользователя',to_date('27.06.24','DD.MM.RR'),'GARIN',null,'USR');
Insert into GARIN.AUDIT_ACTION (AUDACT_ID,AUDACT_NAME,AUDACT_DATE,AUDACT_USER,AUDACT_COMM,AUDACT_TABLE) values ('41','Добавление пользователя',to_date('05.07.24','DD.MM.RR'),'GARIN',null,'consumer');
Insert into GARIN.AUDIT_ACTION (AUDACT_ID,AUDACT_NAME,AUDACT_DATE,AUDACT_USER,AUDACT_COMM,AUDACT_TABLE) values ('42','Изменение пользователя',to_date('05.07.24','DD.MM.RR'),'GARIN',null,'consumer');
Insert into GARIN.AUDIT_ACTION (AUDACT_ID,AUDACT_NAME,AUDACT_DATE,AUDACT_USER,AUDACT_COMM,AUDACT_TABLE) values ('43','Удаление пользователя',to_date('05.07.24','DD.MM.RR'),'GARIN',null,'consumer');
Insert into GARIN.AUDIT_ACTION (AUDACT_ID,AUDACT_NAME,AUDACT_DATE,AUDACT_USER,AUDACT_COMM,AUDACT_TABLE) values ('61','Добавление пользователя',to_date('08.07.24','DD.MM.RR'),'GARIN',null,'consumer');
Insert into GARIN.AUDIT_ACTION (AUDACT_ID,AUDACT_NAME,AUDACT_DATE,AUDACT_USER,AUDACT_COMM,AUDACT_TABLE) values ('62','Удаление пользователя',to_date('08.07.24','DD.MM.RR'),'GARIN',null,'consumer');
Insert into GARIN.AUDIT_ACTION (AUDACT_ID,AUDACT_NAME,AUDACT_DATE,AUDACT_USER,AUDACT_COMM,AUDACT_TABLE) values ('63','Добавление пользователя',to_date('08.07.24','DD.MM.RR'),'GARIN',null,'consumer');
Insert into GARIN.AUDIT_ACTION (AUDACT_ID,AUDACT_NAME,AUDACT_DATE,AUDACT_USER,AUDACT_COMM,AUDACT_TABLE) values ('64','Удаление пользователя',to_date('08.07.24','DD.MM.RR'),'GARIN',null,'consumer');
Insert into GARIN.AUDIT_ACTION (AUDACT_ID,AUDACT_NAME,AUDACT_DATE,AUDACT_USER,AUDACT_COMM,AUDACT_TABLE) values ('65','Добавление пользователя',to_date('08.07.24','DD.MM.RR'),'GARIN',null,'consumer');
Insert into GARIN.AUDIT_ACTION (AUDACT_ID,AUDACT_NAME,AUDACT_DATE,AUDACT_USER,AUDACT_COMM,AUDACT_TABLE) values ('66','Удаление пользователя',to_date('08.07.24','DD.MM.RR'),'GARIN',null,'consumer');
Insert into GARIN.AUDIT_ACTION (AUDACT_ID,AUDACT_NAME,AUDACT_DATE,AUDACT_USER,AUDACT_COMM,AUDACT_TABLE) values ('81','Добавление пользователя',to_date('10.07.24','DD.MM.RR'),'GARIN',null,'consumer');
Insert into GARIN.AUDIT_ACTION (AUDACT_ID,AUDACT_NAME,AUDACT_DATE,AUDACT_USER,AUDACT_COMM,AUDACT_TABLE) values ('83','Удаление пользователя',to_date('10.07.24','DD.MM.RR'),'GARIN',null,'consumer');
Insert into GARIN.AUDIT_ACTION (AUDACT_ID,AUDACT_NAME,AUDACT_DATE,AUDACT_USER,AUDACT_COMM,AUDACT_TABLE) values ('84','Добавление пользователя',to_date('10.07.24','DD.MM.RR'),'GARIN',null,'consumer');
Insert into GARIN.AUDIT_ACTION (AUDACT_ID,AUDACT_NAME,AUDACT_DATE,AUDACT_USER,AUDACT_COMM,AUDACT_TABLE) values ('85','Удаление пользователя',to_date('10.07.24','DD.MM.RR'),'GARIN',null,'consumer');
Insert into GARIN.AUDIT_ACTION (AUDACT_ID,AUDACT_NAME,AUDACT_DATE,AUDACT_USER,AUDACT_COMM,AUDACT_TABLE) values ('86','Добавление пользователя',to_date('10.07.24','DD.MM.RR'),'GARIN',null,'consumer');
Insert into GARIN.AUDIT_ACTION (AUDACT_ID,AUDACT_NAME,AUDACT_DATE,AUDACT_USER,AUDACT_COMM,AUDACT_TABLE) values ('87','Удаление пользователя',to_date('10.07.24','DD.MM.RR'),'GARIN',null,'consumer');
Insert into GARIN.AUDIT_ACTION (AUDACT_ID,AUDACT_NAME,AUDACT_DATE,AUDACT_USER,AUDACT_COMM,AUDACT_TABLE) values ('88','Добавление пользователя',to_date('10.07.24','DD.MM.RR'),'GARIN',null,'consumer');
Insert into GARIN.AUDIT_ACTION (AUDACT_ID,AUDACT_NAME,AUDACT_DATE,AUDACT_USER,AUDACT_COMM,AUDACT_TABLE) values ('89','Удаление пользователя',to_date('10.07.24','DD.MM.RR'),'GARIN',null,'consumer');
Insert into GARIN.AUDIT_ACTION (AUDACT_ID,AUDACT_NAME,AUDACT_DATE,AUDACT_USER,AUDACT_COMM,AUDACT_TABLE) values ('90','Добавление пользователя',to_date('10.07.24','DD.MM.RR'),'GARIN',null,'consumer');
Insert into GARIN.AUDIT_ACTION (AUDACT_ID,AUDACT_NAME,AUDACT_DATE,AUDACT_USER,AUDACT_COMM,AUDACT_TABLE) values ('91','Удаление пользователя',to_date('10.07.24','DD.MM.RR'),'GARIN',null,'consumer');
Insert into GARIN.AUDIT_ACTION (AUDACT_ID,AUDACT_NAME,AUDACT_DATE,AUDACT_USER,AUDACT_COMM,AUDACT_TABLE) values ('92','Добавление пользователя',to_date('10.07.24','DD.MM.RR'),'GARIN',null,'consumer');
Insert into GARIN.AUDIT_ACTION (AUDACT_ID,AUDACT_NAME,AUDACT_DATE,AUDACT_USER,AUDACT_COMM,AUDACT_TABLE) values ('93','Изменение пользователя',to_date('10.07.24','DD.MM.RR'),'GARIN',null,'consumer');
Insert into GARIN.AUDIT_ACTION (AUDACT_ID,AUDACT_NAME,AUDACT_DATE,AUDACT_USER,AUDACT_COMM,AUDACT_TABLE) values ('94','Изменение пользователя',to_date('10.07.24','DD.MM.RR'),'GARIN',null,'consumer');
Insert into GARIN.AUDIT_ACTION (AUDACT_ID,AUDACT_NAME,AUDACT_DATE,AUDACT_USER,AUDACT_COMM,AUDACT_TABLE) values ('95','Изменение пользователя',to_date('10.07.24','DD.MM.RR'),'GARIN',null,'consumer');
REM INSERTING into GARIN.AUDIT_DATA
SET DEFINE OFF;
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('21','I','consumer','ID',null,'24',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('21','I','consumer','USERNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('21','I','consumer','EMAIL',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('21','I','consumer','PASSWORD_HASH',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('21','I','consumer','FNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('21','I','consumer','LNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('21','I','consumer','REG_DATE',null,'04.07.24',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('22','D','consumer','ID','24',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('22','D','consumer','USERNAME','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('22','D','consumer','EMAIL','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('22','D','consumer','PASSWORD_HASH','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('22','D','consumer','FNAME','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('22','D','consumer','LNAME','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('22','D','consumer','REG_DATE','04.07.24',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('23','I','consumer','ID',null,'37',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('23','I','consumer','USERNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('23','I','consumer','EMAIL',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('23','I','consumer','PASSWORD_HASH',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('23','I','consumer','FNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('23','I','consumer','LNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('23','I','consumer','REG_DATE',null,'04.07.24',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('24','D','consumer','ID','37',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('24','D','consumer','USERNAME','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('24','D','consumer','EMAIL','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('24','D','consumer','PASSWORD_HASH','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('24','D','consumer','FNAME','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('24','D','consumer','LNAME','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('24','D','consumer','REG_DATE','04.07.24',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('25','I','consumer','ID',null,'39',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('25','I','consumer','USERNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('25','I','consumer','EMAIL',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('25','I','consumer','PASSWORD_HASH',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('25','I','consumer','FNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('25','I','consumer','LNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('25','I','consumer','REG_DATE',null,'04.07.24',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('26','D','consumer','ID','39',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('26','D','consumer','USERNAME','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('26','D','consumer','EMAIL','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('26','D','consumer','PASSWORD_HASH','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('26','D','consumer','FNAME','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('26','D','consumer','LNAME','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('26','D','consumer','REG_DATE','04.07.24',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('27','I','consumer','ID',null,'40',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('27','I','consumer','USERNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('27','I','consumer','EMAIL',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('27','I','consumer','PASSWORD_HASH',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('27','I','consumer','FNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('27','I','consumer','LNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('27','I','consumer','REG_DATE',null,'04.07.24',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('28','D','consumer','ID','40',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('28','D','consumer','USERNAME','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('28','D','consumer','EMAIL','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('28','D','consumer','PASSWORD_HASH','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('28','D','consumer','FNAME','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('28','D','consumer','LNAME','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('28','D','consumer','REG_DATE','04.07.24',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('1','I','USR','USR_ID',null,'1',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('1','I','USR','USER_NAME',null,'al',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('1','I','USR','LNAME',null,'al',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('1','I','USR','FNAME',null,'al',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('1','I','USR','PHONENUMBER',null,'al',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('1','I','USR','EMAIL',null,'al',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('1','I','USR','ADDRESS',null,'al',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('2','U','USR','USR_ID','1','2',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('3','D','USR','USR_ID','2',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('3','D','USR','USER_NAME','al',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('3','D','USR','LNAME','al',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('3','D','USR','FNAME','al',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('3','D','USR','PHONENUMBER','al',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('3','D','USR','EMAIL','al',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('3','D','USR','ADDRESS','al',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('4','I','USR','USR_ID',null,'1',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('4','I','USR','USER_NAME',null,'dsf',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('4','I','USR','LNAME',null,'dsf',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('4','I','USR','FNAME',null,'dsf',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('4','I','USR','PHONENUMBER',null,'dsf',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('4','I','USR','EMAIL',null,'dsf',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('4','I','USR','ADDRESS',null,'dsf',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('41','I','consumer','ID',null,'41',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('41','I','consumer','USERNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('41','I','consumer','EMAIL',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('41','I','consumer','PASSWORD_HASH',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('41','I','consumer','FNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('41','I','consumer','LNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('41','I','consumer','REG_DATE',null,'05.07.24',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('42','U','consumer','USERNAME','ALAN','ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('42','U','consumer','EMAIL','ALAN','ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('42','U','consumer','PASSWORD_HASH','ALAN','ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('42','U','consumer','FNAME','ALAN','ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('42','U','consumer','LNAME','ALAN','ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('43','D','consumer','ID','41',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('43','D','consumer','USERNAME','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('43','D','consumer','EMAIL','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('43','D','consumer','PASSWORD_HASH','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('43','D','consumer','FNAME','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('43','D','consumer','LNAME','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('43','D','consumer','REG_DATE','05.07.24',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('61','I','consumer','ID',null,'61',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('61','I','consumer','USERNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('61','I','consumer','EMAIL',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('61','I','consumer','PASSWORD_HASH',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('61','I','consumer','FNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('61','I','consumer','LNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('61','I','consumer','REG_DATE',null,'08.07.24',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('62','D','consumer','ID','61',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('62','D','consumer','USERNAME','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('62','D','consumer','EMAIL','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('62','D','consumer','PASSWORD_HASH','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('62','D','consumer','FNAME','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('62','D','consumer','LNAME','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('62','D','consumer','REG_DATE','08.07.24',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('63','I','consumer','ID',null,'62',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('63','I','consumer','USERNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('63','I','consumer','EMAIL',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('63','I','consumer','PASSWORD_HASH',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('63','I','consumer','FNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('63','I','consumer','LNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('63','I','consumer','REG_DATE',null,'08.07.24',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('64','D','consumer','ID','62',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('64','D','consumer','USERNAME','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('64','D','consumer','EMAIL','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('64','D','consumer','PASSWORD_HASH','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('64','D','consumer','FNAME','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('64','D','consumer','LNAME','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('64','D','consumer','REG_DATE','08.07.24',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('65','I','consumer','ID',null,'63',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('65','I','consumer','USERNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('65','I','consumer','EMAIL',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('65','I','consumer','PASSWORD_HASH',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('65','I','consumer','FNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('65','I','consumer','LNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('65','I','consumer','REG_DATE',null,'08.07.24',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('66','D','consumer','ID','63',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('66','D','consumer','USERNAME','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('66','D','consumer','EMAIL','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('66','D','consumer','PASSWORD_HASH','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('66','D','consumer','FNAME','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('66','D','consumer','LNAME','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('66','D','consumer','REG_DATE','08.07.24',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('81','I','consumer','ID',null,'81',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('81','I','consumer','USERNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('81','I','consumer','EMAIL',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('81','I','consumer','PASSWORD_HASH',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('81','I','consumer','FNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('81','I','consumer','LNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('81','I','consumer','REG_DATE',null,'10.07.24',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('83','D','consumer','ID','81',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('83','D','consumer','USERNAME','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('83','D','consumer','EMAIL','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('83','D','consumer','PASSWORD_HASH','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('83','D','consumer','FNAME','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('83','D','consumer','LNAME','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('83','D','consumer','REG_DATE','10.07.24',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('84','I','consumer','ID',null,'82',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('84','I','consumer','USERNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('84','I','consumer','EMAIL',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('84','I','consumer','PASSWORD_HASH',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('84','I','consumer','FNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('84','I','consumer','LNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('84','I','consumer','REG_DATE',null,'10.07.24',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('85','D','consumer','ID','82',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('85','D','consumer','USERNAME','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('85','D','consumer','EMAIL','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('85','D','consumer','PASSWORD_HASH','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('85','D','consumer','FNAME','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('85','D','consumer','LNAME','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('85','D','consumer','REG_DATE','10.07.24',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('86','I','consumer','ID',null,'83',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('86','I','consumer','USERNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('86','I','consumer','EMAIL',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('86','I','consumer','PASSWORD_HASH',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('86','I','consumer','FNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('86','I','consumer','LNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('86','I','consumer','REG_DATE',null,'10.07.24',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('87','D','consumer','ID','83',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('87','D','consumer','USERNAME','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('87','D','consumer','EMAIL','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('87','D','consumer','PASSWORD_HASH','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('87','D','consumer','FNAME','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('87','D','consumer','LNAME','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('87','D','consumer','REG_DATE','10.07.24',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('88','I','consumer','ID',null,'83',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('88','I','consumer','USERNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('88','I','consumer','EMAIL',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('88','I','consumer','PASSWORD_HASH',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('88','I','consumer','FNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('88','I','consumer','LNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('88','I','consumer','REG_DATE',null,'10.07.24',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('89','D','consumer','ID','83',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('89','D','consumer','USERNAME','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('89','D','consumer','EMAIL','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('89','D','consumer','PASSWORD_HASH','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('89','D','consumer','FNAME','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('89','D','consumer','LNAME','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('89','D','consumer','REG_DATE','10.07.24',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('90','I','consumer','ID',null,'83',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('90','I','consumer','USERNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('90','I','consumer','EMAIL',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('90','I','consumer','PASSWORD_HASH',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('90','I','consumer','FNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('90','I','consumer','LNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('90','I','consumer','REG_DATE',null,'10.07.24',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('91','D','consumer','ID','83',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('91','D','consumer','USERNAME','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('91','D','consumer','EMAIL','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('91','D','consumer','PASSWORD_HASH','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('91','D','consumer','FNAME','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('91','D','consumer','LNAME','ALAN',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('91','D','consumer','REG_DATE','10.07.24',null,null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('92','I','consumer','ID',null,'83',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('92','I','consumer','USERNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('92','I','consumer','EMAIL',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('92','I','consumer','PASSWORD_HASH',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('92','I','consumer','FNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('92','I','consumer','LNAME',null,'ALAN',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('92','I','consumer','REG_DATE',null,'10.07.24',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('93','U','consumer','USERNAME','ALAN','AL',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('93','U','consumer','EMAIL','ALAN','AL',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('93','U','consumer','PASSWORD_HASH','ALAN','AL',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('93','U','consumer','FNAME','ALAN','AL',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('93','U','consumer','LNAME','ALAN','AL',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('94','U','consumer','USERNAME','AL','A',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('94','U','consumer','EMAIL','AL','A',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('94','U','consumer','PASSWORD_HASH','AL','L',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('94','U','consumer','FNAME','AL','L',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('94','U','consumer','LNAME','AL','L',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('95','U','consumer','USERNAME','A','AL',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('95','U','consumer','EMAIL','A','AL',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('95','U','consumer','PASSWORD_HASH','L','AL',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('95','U','consumer','FNAME','L','AL',null);
Insert into GARIN.AUDIT_DATA (AUDDAT_ID,AUDDAT_OPER,AUDDAT_TABLE,AUDDAT_FIELD,AUDDAT_OLDVAL,AUDDAT_NEWVAL,AUDDAT_COMM) values ('95','U','consumer','LNAME','L','AL',null);
REM INSERTING into GARIN.AUDIT_ENTITIES
SET DEFINE OFF;
Insert into GARIN.AUDIT_ENTITIES (AUD_NAME,AUD_MODE,ATABLE) values ('T_BIUD_cart','Y','cart');
Insert into GARIN.AUDIT_ENTITIES (AUD_NAME,AUD_MODE,ATABLE) values ('T_BIUD_cart_item','Y','cart_item');
Insert into GARIN.AUDIT_ENTITIES (AUD_NAME,AUD_MODE,ATABLE) values ('T_BIUD_consumer','Y','consumer');
Insert into GARIN.AUDIT_ENTITIES (AUD_NAME,AUD_MODE,ATABLE) values ('T_BIUD_game','Y','game');
Insert into GARIN.AUDIT_ENTITIES (AUD_NAME,AUD_MODE,ATABLE) values ('T_BIUD_library','Y','library');
Insert into GARIN.AUDIT_ENTITIES (AUD_NAME,AUD_MODE,ATABLE) values ('T_BIUD_review','Y','review');
Insert into GARIN.AUDIT_ENTITIES (AUD_NAME,AUD_MODE,ATABLE) values ('T_BIUD_USR','Y','USR');
Insert into GARIN.AUDIT_ENTITIES (AUD_NAME,AUD_MODE,ATABLE) values ('T_BIUD_USRGROUP','Y','USRGROUP');
Insert into GARIN.AUDIT_ENTITIES (AUD_NAME,AUD_MODE,ATABLE) values ('T_BUID_GRP_MEMBER','Y','GRP_MEMBER');
Insert into GARIN.AUDIT_ENTITIES (AUD_NAME,AUD_MODE,ATABLE) values ('T_BIUD_AUDIT_ENTITIES','Y','AUDIT_ENTITIES');
Insert into GARIN.AUDIT_ENTITIES (AUD_NAME,AUD_MODE,ATABLE) values ('T_BIUD_ACTION','Y','ACTION');
Insert into GARIN.AUDIT_ENTITIES (AUD_NAME,AUD_MODE,ATABLE) values ('T_BIUD_GRP_RIGHT','Y','GRP_RIGHT');
REM INSERTING into GARIN."cart"
SET DEFINE OFF;
REM INSERTING into GARIN."cart_item"
SET DEFINE OFF;
REM INSERTING into GARIN."consumer"
SET DEFINE OFF;
Insert into GARIN."consumer" (ID,USERNAME,EMAIL,PASSWORD_HASH,FNAME,LNAME,REG_DATE) values ('83','AL','AL','AL','AL','AL',to_date('10.07.24','DD.MM.RR'));
REM INSERTING into GARIN."game"
SET DEFINE OFF;
REM INSERTING into GARIN.GRP_MEMBER
SET DEFINE OFF;
REM INSERTING into GARIN.GRP_RIGHT
SET DEFINE OFF;
REM INSERTING into GARIN."library"
SET DEFINE OFF;
REM INSERTING into GARIN.LOGACT_ACTION
SET DEFINE OFF;
Insert into GARIN.LOGACT_ACTION (LOGACT_ID,LOGACT_NAME,LOGACT_USER,LOGACT_DATE,LOGACT_TABLE,LOGACT_OP) values ('45','Изменение пользователя','GARIN',to_date('10.07.24','DD.MM.RR'),'consumer','U');
Insert into GARIN.LOGACT_ACTION (LOGACT_ID,LOGACT_NAME,LOGACT_USER,LOGACT_DATE,LOGACT_TABLE,LOGACT_OP) values ('43','Создание пользователя','GARIN',to_date('10.07.24','DD.MM.RR'),'consumer','I');
REM INSERTING into GARIN.LOGACT_DATA
SET DEFINE OFF;
Insert into GARIN.LOGACT_DATA (LOGDAT_ID,LOGDAT_TABLE,NEW_ID,NEW_USERNAME,NEW_EMAIL,NEW_PASSWORD_HASH,NEW_FNAME,NEW_LNAME,NEW_REG_DATE,OLD_ID,OLD_USERNAME,OLD_EMAIL,OLD_FNAME,OLD_LNAME,OLD_PASSWORD_HASH,OLD_REG_DATE) values ('43','consumer','83','ALAN','ALAN','ALAN','ALAN','ALAN',to_date('10.07.24','DD.MM.RR'),null,null,null,null,null,null,null);
REM INSERTING into GARIN."review"
SET DEFINE OFF;
REM INSERTING into GARIN.USR
SET DEFINE OFF;
REM INSERTING into GARIN.USRGROUP
SET DEFINE OFF;
--------------------------------------------------------
--  DDL for Index AUDIT_ACTION_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "GARIN"."AUDIT_ACTION_PK" ON "GARIN"."AUDIT_ACTION" ("AUDACT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index LOGACT_ACTION_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "GARIN"."LOGACT_ACTION_PK" ON "GARIN"."LOGACT_ACTION" ("LOGACT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index USR_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "GARIN"."USR_PK" ON "GARIN"."USR" ("USR_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index cart_pk
--------------------------------------------------------

  CREATE UNIQUE INDEX "GARIN"."cart_pk" ON "GARIN"."cart" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index consumer_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "GARIN"."consumer_PK" ON "GARIN"."consumer" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index game_pk
--------------------------------------------------------

  CREATE UNIQUE INDEX "GARIN"."game_pk" ON "GARIN"."game" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index review_pk
--------------------------------------------------------

  CREATE UNIQUE INDEX "GARIN"."review_pk" ON "GARIN"."review" ("ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Trigger T_BIUD_ACTION
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER "GARIN"."T_BIUD_ACTION" 
AFTER INSERT OR UPDATE OR DELETE 
ON ACTION
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
  OP_CODE CHAR(1);
  AUDIT_ACTION_NAME VARCHAR2(250);
  NEW_ID NUMBER;
BEGIN
  IF AUDIT_PKG.GET_AUDIT_MODE('ACTION') = 'N' THEN RETURN; END IF;
  NEW_ID := AUDIT_ACTION_SEQ.NEXTVAL;

  IF INSERTING THEN
  OP_CODE := 'I';
  AUDIT_ACTION_NAME := 'Добавление действия';
  ELSIF UPDATING THEN
  OP_CODE := 'U';
  AUDIT_ACTION_NAME := 'Изменение действия';
  ELSIF DELETING THEN
  OP_CODE := 'D';
  AUDIT_ACTION_NAME := 'Удаление действия';
  ELSE
  OP_CODE := 'J';
  END IF;

  INSERT INTO AUDIT_ACTION (AUDACT_ID, AUDACT_NAME, AUDACT_DATE, AUDACT_USER, AUDACT_COMM, AUDACT_TABLE)
  VALUES (NEW_ID, AUDIT_ACTION_NAME, SYSDATE, USER, '', 'ACTION');

  IF UPDATING ('ACT_ID') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'ACTION', 'ACT_ID', :OLD.ACT_ID, :NEW.ACT_ID, '');
  END IF;

  IF UPDATING ('ACT_PARENT') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'ACTION', 'ACT_PARENT', :OLD.ACT_PARENT, :NEW.ACT_PARENT, '');
  END IF;

  IF UPDATING ('ACT_NAME') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'ACTION', 'ACT_NAME', :OLD.ACT_NAME, :NEW.ACT_NAME, '');
  END IF;

END T_BIUD_ACTION;
/
ALTER TRIGGER "GARIN"."T_BIUD_ACTION" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_BIUD_AUDIT_ENTITIES
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER "GARIN"."T_BIUD_AUDIT_ENTITIES" 
AFTER INSERT OR UPDATE OR DELETE 
ON AUDIT_ENTITIES
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
  OP_CODE CHAR(1);
  AUDIT_ACTION_NAME VARCHAR2(250);
  NEW_ID NUMBER;
BEGIN
  IF AUDIT_PKG.GET_AUDIT_MODE('AUDIT_ENTITIES') = 'N' THEN RETURN; END IF;
  NEW_ID := AUDIT_ACTION_SEQ.NEXTVAL;

  IF INSERTING THEN
  OP_CODE := 'I';
  AUDIT_ACTION_NAME := 'Добавление аудита';
  ELSIF UPDATING THEN
  OP_CODE := 'U';
  AUDIT_ACTION_NAME := 'Изменение аудита';
  ELSIF DELETING THEN
  OP_CODE := 'D';
  AUDIT_ACTION_NAME := 'Удаление аудита';
  ELSE
  OP_CODE := 'J';
  END IF;

  INSERT INTO AUDIT_ACTION (AUDACT_ID, AUDACT_NAME, AUDACT_DATE, AUDACT_USER, AUDACT_COMM, AUDACT_TABLE)
  VALUES (NEW_ID, AUDIT_ACTION_NAME, SYSDATE, USER, '', 'AUDIT_ENTITIES');
  
  IF UPDATING ('AUD_NAME') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'AUDIT_ENTITIES', 'AUD_NAME', :OLD.AUD_NAME, :NEW.AUD_NAME, '');
  END IF;
  
  IF UPDATING ('AUD_MODE') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'AUDIT_ENTITIES', 'AUD_MODE', :OLD.AUD_MODE, :NEW.AUD_MODE, '');
  END IF;
  
  IF UPDATING ('ATABLE') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'AUDIT_ENTITIES', 'ATABLE', :OLD.ATABLE, :NEW.ATABLE, '');
  END IF;

END T_BIUD_AUDIT_ENTITIES;
/
ALTER TRIGGER "GARIN"."T_BIUD_AUDIT_ENTITIES" DISABLE;
--------------------------------------------------------
--  DDL for Trigger T_BIUD_cart
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER "GARIN"."T_BIUD_cart" 
AFTER INSERT OR UPDATE OR DELETE 
ON "cart"
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
  OP_CODE CHAR(1);
  AUDIT_ACTION_NAME VARCHAR2(250);
  NEW_ID NUMBER;
BEGIN
  IF AUDIT_PKG.GET_AUDIT_MODE('cart') = 'N' THEN RETURN; END IF;
  NEW_ID := AUDIT_ACTION_SEQ.NEXTVAL;

  IF INSERTING THEN
  OP_CODE := 'I';
  AUDIT_ACTION_NAME := 'Добавление корзины';
  ELSIF UPDATING THEN
  OP_CODE := 'U';
  AUDIT_ACTION_NAME := 'Изменение корзины';
  ELSIF DELETING THEN
  OP_CODE := 'D';
  AUDIT_ACTION_NAME := 'Удаление корзины';
  ELSE
  OP_CODE := 'J';
  END IF;

  INSERT INTO AUDIT_ACTION (AUDACT_ID, AUDACT_NAME, AUDACT_DATE, AUDACT_USER, AUDACT_COMM, AUDACT_TABLE)
  VALUES (NEW_ID, AUDIT_ACTION_NAME, SYSDATE, USER, '', 'cart');

  IF UPDATING ('ID') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'cart', 'ID', :OLD.ID, :NEW.ID, '');
  END IF;

  IF UPDATING ('USER_ID') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'cart', 'USER_ID', :OLD.USER_ID, :NEW.USER_ID, '');
  END IF;

END "T_BIUD_cart";
/
ALTER TRIGGER "GARIN"."T_BIUD_cart" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_BIUD_cart_item
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER "GARIN"."T_BIUD_cart_item" 
AFTER INSERT OR UPDATE OR DELETE 
ON "cart_item"
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
  OP_CODE CHAR(1);
  AUDIT_ACTION_NAME VARCHAR2(250);
  NEW_ID NUMBER;
BEGIN
  IF AUDIT_PKG.GET_AUDIT_MODE('cart_item') = 'N' THEN RETURN; END IF;
  NEW_ID := AUDIT_ACTION_SEQ.NEXTVAL;

  IF INSERTING THEN
  OP_CODE := 'I';
  AUDIT_ACTION_NAME := 'Добавление заказа';
  ELSIF UPDATING THEN
  OP_CODE := 'U';
  AUDIT_ACTION_NAME := 'Изменение заказа';
  ELSIF DELETING THEN
  OP_CODE := 'D';
  AUDIT_ACTION_NAME := 'Удаление заказа';
  ELSE
  OP_CODE := 'J';
  END IF;

  INSERT INTO AUDIT_ACTION (AUDACT_ID, AUDACT_NAME, AUDACT_DATE, AUDACT_USER, AUDACT_COMM, AUDACT_TABLE)
  VALUES (NEW_ID, AUDIT_ACTION_NAME, SYSDATE, USER, '', 'cart_item');

  IF UPDATING ('CART_ID') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'cart_item', 'CART_ID', :OLD.CART_ID, :NEW.CART_ID, '');
  END IF;

  IF UPDATING ('GAME_ID') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'cart_item', 'GAME_ID', :OLD.GAME_ID, :NEW.GAME_ID, '');
  END IF;

  IF UPDATING ('QUANTITY') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'cart_item', 'QUANTITY', :OLD.QUANTITY, :NEW.QUANTITY, '');
  END IF;

END "T_BIUD_cart_item";
/
ALTER TRIGGER "GARIN"."T_BIUD_cart_item" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_BIUD_consumer
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER "GARIN"."T_BIUD_consumer" 
AFTER INSERT OR UPDATE OR DELETE 
ON "consumer"
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
  OP_CODE CHAR(1);
  AUDIT_ACTION_NAME VARCHAR2(250);
  NEW_ID NUMBER;
BEGIN
  IF AUDIT_PKG.GET_AUDIT_MODE('consumer') = 'N' THEN RETURN; END IF;
  NEW_ID := AUDIT_ACTION_SEQ.NEXTVAL;

  IF INSERTING THEN
  OP_CODE := 'I';
  AUDIT_ACTION_NAME := 'Добавление пользователя';
  ELSIF UPDATING THEN
  OP_CODE := 'U';
  AUDIT_ACTION_NAME := 'Изменение пользователя';
  ELSIF DELETING THEN
  OP_CODE := 'D';
  AUDIT_ACTION_NAME := 'Удаление пользователя';
  ELSE
  OP_CODE := 'J';
  END IF;

  INSERT INTO AUDIT_ACTION (AUDACT_ID, AUDACT_NAME, AUDACT_DATE, AUDACT_USER, AUDACT_COMM, AUDACT_TABLE)
  VALUES (NEW_ID, AUDIT_ACTION_NAME, SYSDATE, USER, '', 'consumer');

  IF UPDATING ('ID') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'consumer', 'ID', :OLD.ID, :NEW.ID, '');
  END IF;

  IF UPDATING ('USERNAME') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'consumer', 'USERNAME', :OLD.USERNAME, :NEW.USERNAME, '');
  END IF;

  IF UPDATING ('EMAIL') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'consumer', 'EMAIL', :OLD.EMAIL, :NEW.EMAIL, '');
  END IF;

  IF UPDATING ('PASSWORD_HASH') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'consumer', 'PASSWORD_HASH', :OLD.PASSWORD_HASH, :NEW.PASSWORD_HASH, '');
  END IF;

  IF UPDATING ('FNAME') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'consumer', 'FNAME', :OLD.FNAME, :NEW.FNAME, '');
  END IF;

  IF UPDATING ('LNAME') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'consumer', 'LNAME', :OLD.LNAME, :NEW.LNAME, '');
  END IF;

  IF UPDATING ('REG_DATE') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'consumer', 'REG_DATE', :OLD.REG_DATE, :NEW.REG_DATE, '');
  END IF;

END "T_BIUD_consumer";
/
ALTER TRIGGER "GARIN"."T_BIUD_consumer" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_BIUD_game
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER "GARIN"."T_BIUD_game" 
AFTER INSERT OR UPDATE OR DELETE 
ON "game"
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
  OP_CODE CHAR(1);
  AUDIT_ACTION_NAME VARCHAR2(250);
  NEW_ID NUMBER;
BEGIN
  IF AUDIT_PKG.GET_AUDIT_MODE('game') = 'N' THEN RETURN; END IF;
  NEW_ID := AUDIT_ACTION_SEQ.NEXTVAL;

  IF INSERTING THEN
  OP_CODE := 'I';
  AUDIT_ACTION_NAME := 'Добавление игры';
  ELSIF UPDATING THEN
  OP_CODE := 'U';
  AUDIT_ACTION_NAME := 'Изменение игры';
  ELSIF DELETING THEN
  OP_CODE := 'D';
  AUDIT_ACTION_NAME := 'Удаление игры';
  ELSE
  OP_CODE := 'J';
  END IF;

  INSERT INTO AUDIT_ACTION (AUDACT_ID, AUDACT_NAME, AUDACT_DATE, AUDACT_USER, AUDACT_COMM, AUDACT_TABLE)
  VALUES (NEW_ID, AUDIT_ACTION_NAME, SYSDATE, USER, '', 'game');

  IF UPDATING ('ID') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'game', 'ID', :OLD.ID, :NEW.ID, '');
  END IF;

  IF UPDATING ('TITLE') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'game', 'TITLE', :OLD.TITLE, :NEW.TITLE, '');
  END IF;

  IF UPDATING ('DESCRIPTION') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'game', 'DESCRIPTION', :OLD.DESCRIPTION, :NEW.DESCRIPTION, '');
  END IF;

  IF UPDATING ('DEVELOPER_NAME') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'game', 'DEVELOPER_NAME', :OLD.DEVELOPER_NAME, :NEW.DEVELOPER_NAME, '');
  END IF;

  IF UPDATING ('RATING') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'game', 'RATING', :OLD.RATING, :NEW.RATING, '');
  END IF;

  IF UPDATING ('REL_DATE') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'game', 'REL_DATE', :OLD.REL_DATE, :NEW.REL_DATE, '');
  END IF;

END "T_BIUD_game";
/
ALTER TRIGGER "GARIN"."T_BIUD_game" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_BIUD_GRP_MEMBER
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER "GARIN"."T_BIUD_GRP_MEMBER" 
AFTER INSERT OR UPDATE OR DELETE 
ON GRP_MEMBER
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
  OP_CODE CHAR(1);
  AUDIT_ACTION_NAME VARCHAR2(250);
  NEW_ID NUMBER;
BEGIN
  IF AUDIT_PKG.GET_AUDIT_MODE('GRP_MEMBER') = 'N' THEN RETURN; END IF;
  NEW_ID := AUDIT_ACTION_SEQ.NEXTVAL;

  IF INSERTING THEN
  OP_CODE := 'I';
  AUDIT_ACTION_NAME := 'Добавление пользователя в группу';
  ELSIF UPDATING THEN
  OP_CODE := 'U';
  AUDIT_ACTION_NAME := 'Изменение пользователя в группе';
  ELSIF DELETING THEN
  OP_CODE := 'D';
  AUDIT_ACTION_NAME := 'Удаление пользователя из группы';
  ELSE
  OP_CODE := 'J';
  END IF;

  INSERT INTO AUDIT_ACTION (AUDACT_ID, AUDACT_NAME, AUDACT_DATE, AUDACT_USER, AUDACT_COMM, AUDACT_TABLE)
  VALUES (NEW_ID, AUDIT_ACTION_NAME, SYSDATE, USER, '', 'GRP_MEMBER');

  IF UPDATING ('GRP_ID') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'GRP_MEMBER', 'GRP_ID', :OLD.GRP_ID, :NEW.GRP_ID, '');
  END IF;

  IF UPDATING ('USR_ID') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'GRP_MEMBER', 'USR_ID', :OLD.USR_ID, :NEW.USR_ID, '');
  END IF;

END T_BIUD_GRP_MEMBER;
/
ALTER TRIGGER "GARIN"."T_BIUD_GRP_MEMBER" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_BIUD_GRP_RIGHT
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER "GARIN"."T_BIUD_GRP_RIGHT" 
AFTER INSERT OR UPDATE OR DELETE 
ON GRP_RIGHT
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
  OP_CODE CHAR(1);
  AUDIT_ACTION_NAME VARCHAR2(250);
  NEW_ID NUMBER;
BEGIN
  IF AUDIT_PKG.GET_AUDIT_MODE('GRP_RIGHT') = 'N' THEN RETURN; END IF;
  NEW_ID := AUDIT_ACTION_SEQ.NEXTVAL;
  
  IF INSERTING THEN
  OP_CODE := 'I';
  AUDIT_ACTION_NAME := 'Добавление действия группе';
  ELSIF UPDATING THEN
  OP_CODE := 'U';
  AUDIT_ACTION_NAME := 'Изменение действия группе';
  ELSIF DELETING THEN
  OP_CODE := 'D';
  AUDIT_ACTION_NAME := 'Удаление действия группе';
  ELSE
  OP_CODE := 'J';
  END IF;

  INSERT INTO AUDIT_ACTION (AUDACT_ID, AUDACT_NAME, AUDACT_DATE, AUDACT_USER, AUDACT_COMM, AUDACT_TABLE)
  VALUES (NEW_ID, AUDIT_ACTION_NAME, SYSDATE, USER, '', 'GRP_RIGHT');

  IF UPDATING ('ACT_ID') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'GRP_RIGHT', 'ACT_ID', :OLD.ACT_ID, :NEW.ACT_ID, '');
  END IF;

  IF UPDATING ('GRP_ID') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'GRP_RIGHT', 'GRP_ID', :OLD.GRP_ID, :NEW.GRP_ID, '');
  END IF;

END T_BIUD_GRP_RIGHT;
/
ALTER TRIGGER "GARIN"."T_BIUD_GRP_RIGHT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_BIUD_library
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER "GARIN"."T_BIUD_library" 
AFTER INSERT OR UPDATE OR DELETE 
ON "library"
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
  OP_CODE CHAR(1);
  AUDIT_ACTION_NAME VARCHAR2(250);
  NEW_ID NUMBER;
BEGIN
  IF AUDIT_PKG.GET_AUDIT_MODE('library') = 'N' THEN RETURN; END IF;
  NEW_ID := AUDIT_ACTION_SEQ.NEXTVAL;

  IF INSERTING THEN
  OP_CODE := 'I';
  AUDIT_ACTION_NAME := 'Добавление библиотеки';
  ELSIF UPDATING THEN
  OP_CODE := 'U';
  AUDIT_ACTION_NAME := 'Изменение библиотеки';
  ELSIF DELETING THEN
  OP_CODE := 'D';
  AUDIT_ACTION_NAME := 'Удаление библиотеки';
  ELSE
  OP_CODE := 'J';
  END IF;

  INSERT INTO AUDIT_ACTION (AUDACT_ID, AUDACT_NAME, AUDACT_DATE, AUDACT_USER, AUDACT_COMM, AUDACT_TABLE)
  VALUES (NEW_ID, AUDIT_ACTION_NAME, SYSDATE, USER, '', 'library');

  IF UPDATING ('CNSMR_ID') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'library', 'CNSMR_ID', :OLD.CNSMR_ID, :NEW.CNSMR_ID, '');
  END IF;

  IF UPDATING ('GAME_ID') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'library', 'GAME_ID', :OLD.GAME_ID, :NEW.GAME_ID, '');
  END IF;

  IF UPDATING ('ADDED_DATE') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'library', 'ADDED_DATE', :OLD.ADDED_DATE, :NEW.ADDED_DATE, '');
  END IF;

  IF UPDATING ('HOURS_IN_GAME') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'library', 'HOURS_IN_GAME', :OLD.HOURS_IN_GAME, :NEW.HOURS_IN_GAME, '');
  END IF;

END "T_BIUD_library";
/
ALTER TRIGGER "GARIN"."T_BIUD_library" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_BIUD_review
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER "GARIN"."T_BIUD_review" 
AFTER INSERT OR UPDATE OR DELETE 
ON "review"
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
  OP_CODE CHAR(1);
  AUDIT_ACTION_NAME VARCHAR2(250);
  NEW_ID NUMBER;
BEGIN
  IF AUDIT_PKG.GET_AUDIT_MODE('review') = 'N' THEN RETURN; END IF;
  NEW_ID := AUDIT_ACTION_SEQ.NEXTVAL;

  IF INSERTING THEN
  OP_CODE := 'I';
  AUDIT_ACTION_NAME := 'Добавление отзыва';
  ELSIF UPDATING THEN
  OP_CODE := 'U';
  AUDIT_ACTION_NAME := 'Изменение отзыва';
  ELSIF DELETING THEN
  OP_CODE := 'D';
  AUDIT_ACTION_NAME := 'Удаление отзыва';
  ELSE
  OP_CODE := 'J';
  END IF;

  INSERT INTO AUDIT_ACTION (AUDACT_ID, AUDACT_NAME, AUDACT_DATE, AUDACT_USER, AUDACT_COMM, AUDACT_TABLE)
  VALUES (NEW_ID, AUDIT_ACTION_NAME, SYSDATE, USER, '', 'review');

  IF UPDATING ('ID') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'review', 'ID', :OLD.ID, :NEW.ID, '');
  END IF;

  IF UPDATING ('CNSMR_ID') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'review', 'CNSMR_ID', :OLD.CNSMR_ID, :NEW.CNSMR_ID, '');
  END IF;

  IF UPDATING ('GAME_ID') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'review', 'GAME_ID', :OLD.GAME_ID, :NEW.GAME_ID, '');
  END IF;

  IF UPDATING ('RATING') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'review', 'RATING', :OLD.RATING, :NEW.RATING, '');
  END IF;

  IF UPDATING ('TEXT_COMMENT') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'review', 'TEXT_COMMENT', :OLD.TEXT_COMMENT, :NEW.TEXT_COMMENT, '');
  END IF;

END "T_BIUD_review";
/
ALTER TRIGGER "GARIN"."T_BIUD_review" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_BIUD_USR
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER "GARIN"."T_BIUD_USR" 
AFTER INSERT OR UPDATE OR DELETE 
ON USR
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
  OP_CODE CHAR(1);
  AUDIT_ACTION_NAME VARCHAR2(250);
  NEW_ID NUMBER;
BEGIN
  IF AUDIT_PKG.GET_AUDIT_MODE('USR') = 'N' THEN RETURN; END IF;
  NEW_ID := AUDIT_ACTION_SEQ.NEXTVAL;

  IF INSERTING THEN
  OP_CODE := 'I';
  AUDIT_ACTION_NAME := 'Добавление пользователя';
  ELSIF UPDATING THEN
  OP_CODE := 'U';
  AUDIT_ACTION_NAME := 'Изменение пользователя';
  ELSIF DELETING THEN
  OP_CODE := 'D';
  AUDIT_ACTION_NAME := 'Удаление пользователя';
  ELSE
  OP_CODE := 'J';
  END IF;

  INSERT INTO AUDIT_ACTION (AUDACT_ID, AUDACT_NAME, AUDACT_DATE, AUDACT_USER, AUDACT_COMM, AUDACT_TABLE)
  VALUES (NEW_ID, AUDIT_ACTION_NAME, SYSDATE, USER, '', 'USR');
  
  IF UPDATING ('USR_ID') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA
    (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'USR', 'USR_ID', :OLD.USR_ID, :NEW.USR_ID, '');
  END IF;
  
  IF UPDATING ('USER_NAME') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA
    (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'USR', 'USER_NAME', :OLD.USER_NAME, :NEW.USER_NAME, '');
  END IF;

  IF UPDATING ('LNAME') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA
    (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'USR', 'LNAME', :OLD.LNAME, :NEW.LNAME, '');
  END IF;
  
  IF UPDATING ('FNAME') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA
    (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'USR', 'FNAME', :OLD.FNAME, :NEW.FNAME, '');
  END IF;
    
  IF UPDATING ('PHONENUMBER') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA
    (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'USR', 'PHONENUMBER', :OLD.PHONENUMBER, :NEW.PHONENUMBER, '');
  END IF;

  IF UPDATING ('EMAIL') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA
    (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'USR', 'EMAIL', :OLD.EMAIL, :NEW.EMAIL, '');
  END IF;
  
  IF UPDATING ('ADDRESS') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA
    (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'USR', 'ADDRESS', :OLD.ADDRESS, :NEW.ADDRESS, '');
  END IF;

END T_BIUD_USR;
/
ALTER TRIGGER "GARIN"."T_BIUD_USR" ENABLE;
--------------------------------------------------------
--  DDL for Trigger T_BIUD_USRGROUP
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER "GARIN"."T_BIUD_USRGROUP" 
AFTER INSERT OR UPDATE OR DELETE 
ON USRGROUP
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
  OP_CODE CHAR(1);
  AUDIT_ACTION_NAME VARCHAR2(250);
  NEW_ID NUMBER;
BEGIN
  IF AUDIT_PKG.GET_AUDIT_MODE('USRGROUP') = 'N' THEN RETURN; END IF;
  NEW_ID := AUDIT_ACTION_SEQ.NEXTVAL;

  IF INSERTING THEN
  OP_CODE := 'I';
  AUDIT_ACTION_NAME := 'Добавление группы';
  ELSIF UPDATING THEN
  OP_CODE := 'U';
  AUDIT_ACTION_NAME := 'Изменение группы';
  ELSIF DELETING THEN
  OP_CODE := 'D';
  AUDIT_ACTION_NAME := 'Удаление группы';
  ELSE
  OP_CODE := 'J';
  END IF;

  INSERT INTO AUDIT_ACTION (AUDACT_ID, AUDACT_NAME, AUDACT_DATE, AUDACT_USER, AUDACT_COMM, AUDACT_TABLE)
  VALUES (NEW_ID, AUDIT_ACTION_NAME, SYSDATE, USER, '', 'USRGROUP');

  IF UPDATING ('GRP_ID') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'USRGROUP', 'GRP_ID', :OLD.GRP_ID, :NEW.GRP_ID, '');
  END IF;

  IF UPDATING ('GRP_NAME') OR INSERTING OR DELETING THEN 
  INSERT INTO AUDIT_DATA (AUDDAT_ID, AUDDAT_OPER, AUDDAT_TABLE, AUDDAT_FIELD, AUDDAT_OLDVAL , AUDDAT_NEWVAL, AUDDAT_COMM)
    VALUES (NEW_ID, OP_CODE, 'USRGROUP', 'GRP_NAME', :OLD.GRP_NAME, :NEW.GRP_NAME, '');
  END IF;

END T_BIUD_USRGROUP;
/
ALTER TRIGGER "GARIN"."T_BIUD_USRGROUP" ENABLE;
--------------------------------------------------------
--  DDL for Package AUDIT_PKG
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE PACKAGE "GARIN"."AUDIT_PKG" IS
  PROCEDURE REGISTER_AUDIT(IN_AUD_NAME IN VARCHAR2, IN_AUD_MODE IN CHAR, IN_ATABLE IN VARCHAR2);
  PROCEDURE CHANGE_AUDIT_MODE(IN_AUD_NAME IN VARCHAR2, IN_AUD_MODE IN CHAR);
  FUNCTION GET_AUDIT_MODE(IN_TABLE_NAME IN VARCHAR2) RETURN CHAR;
END AUDIT_PKG;

/
--------------------------------------------------------
--  DDL for Package CART_PKG
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE PACKAGE "GARIN"."CART_PKG" AS
  PROCEDURE CREATE_CART(IN_USER_ID IN NUMBER);
  PROCEDURE DELETE_CART(IN_ID IN NUMBER);
  PROCEDURE CREATE_ORDER(IN_CART_ID IN NUMBER, IN_GAME_ID IN NUMBER);
  PROCEDURE SET_ORDER_QUANTITY(IN_CART_ID IN NUMBER, IN_GAME_ID IN NUMBER, IN_QUANTITY IN NUMBER);
  PROCEDURE DELETE_ORDER(IN_CART_ID IN NUMBER, IN_GAME_ID IN NUMBER);
END CART_PKG;

/
--------------------------------------------------------
--  DDL for Package CONSUMER_PKG
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE PACKAGE "GARIN"."CONSUMER_PKG" AS
  PROCEDURE CREATE_CONSUMER(IN_USERNAME IN VARCHAR2, IN_EMAIL IN VARCHAR2, IN_PASSWORD_HASH IN VARCHAR2, IN_FNAME IN VARCHAR2, IN_LNAME IN VARCHAR2);
  PROCEDURE EDIT_CONSUMER(IN_USER_ID IN NUMBER, IN_USERNAME IN VARCHAR2, IN_EMAIL IN VARCHAR2, IN_PASSWORD_HASH IN VARCHAR2, IN_FNAME IN VARCHAR2, IN_LNAME IN VARCHAR2);
  PROCEDURE DELETE_CONSUMER(IN_USER_ID IN NUMBER);
END CONSUMER_PKG;

/
--------------------------------------------------------
--  DDL for Package GAME_PKG
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE PACKAGE "GARIN"."GAME_PKG" AS
  PROCEDURE CREATE_GAME(IN_TITLE IN VARCHAR2, IN_DESCRIPTION IN VARCHAR2, IN_DEVELOPER_NAME IN VARCHAR2, IN_RATING IN NUMBER, IN_REL_DATE IN DATE);
  PROCEDURE EDIT_GAME(IN_GAME_ID IN NUMBER, IN_TITLE IN VARCHAR2, IN_DESCRIPTION IN VARCHAR2, IN_DEVELOPER_NAME IN VARCHAR2, IN_RATING IN NUMBER, IN_REL_DATE IN DATE);
  PROCEDURE DELETE_GAME(IN_GAME_ID IN NUMBER);
END GAME_PKG;

/
--------------------------------------------------------
--  DDL for Package GROUP_PKG
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE PACKAGE "GARIN"."GROUP_PKG" IS
  PROCEDURE CREATE_GROUP(IN_GROUP_NAME IN VARCHAR2);
  PROCEDURE DELETE_GROUP(IN_GROUP_ID IN NUMBER);
  PROCEDURE EDIT_GROUP(IN_GROUP_ID IN NUMBER, IN_NEW_GROUP_NAME IN VARCHAR2);
  PROCEDURE ADD_USER_TO_GROUP(IN_USER_ID IN NUMBER, IN_GROUP_ID IN NUMBER);
  PROCEDURE DELETE_USER_FROM_GROUP(IN_USER_ID IN NUMBER, IN_GROUP_ID IN NUMBER);
  PROCEDURE ADD_ACTION(IN_ACT_NAME IN VARCHAR2);
  PROCEDURE ADD_ACTION(IN_ACT_NAME IN VARCHAR2, IN_ACT_PARENT IN NUMBER);
  PROCEDURE DELETE_ACTION(IN_ACT_ID IN NUMBER);
  PROCEDURE ADD_ACT_TO_GROUP(IN_ACT_ID IN NUMBER, IN_GROUP_ID IN NUMBER);
  PROCEDURE DELETE_ACT_FROM_GROUP(IN_ACT_ID IN NUMBER, IN_GROUP_ID IN NUMBER);
END GROUP_PKG;

/
--------------------------------------------------------
--  DDL for Package LIBRARY_PKG
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE PACKAGE "GARIN"."LIBRARY_PKG" AS
  PROCEDURE CREATE_LIBRARY(IN_CNSMR_ID IN NUMBER, IN_GAME_ID IN NUMBER, IN_ADDED_DATE IN DATE, IN_HOURS_IN_GAME IN NUMBER);
  PROCEDURE EDIT_LIBRARY(IN_CNSMR_ID IN NUMBER, IN_GAME_ID IN NUMBER, IN_ADDED_DATE IN DATE, IN_HOURS_IN_GAME IN NUMBER);
  PROCEDURE DELETE_LIBRARY(IN_CNSMR_ID IN NUMBER, IN_GAME_ID IN NUMBER);
END LIBRARY_PKG;

/
--------------------------------------------------------
--  DDL for Package LOGACT_PKG
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE PACKAGE "GARIN"."LOGACT_PKG" IS
  PROCEDURE ROLLBACK;
END LOGACT_PKG;

/
--------------------------------------------------------
--  DDL for Package REVIEW_PKG
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE PACKAGE "GARIN"."REVIEW_PKG" AS
  PROCEDURE CREATE_REVIEW(IN_CNSMR_ID IN NUMBER, IN_GAME_ID IN NUMBER, IN_RATTING IN NUMBER, IN_TEXT_COMMENT IN VARCHAR2);
  PROCEDURE EDIT_REVIEW(IN_ID IN NUMBER, IN_CNSMR_ID IN NUMBER, IN_GAME_ID IN NUMBER, IN_RATTING IN NUMBER, IN_TEXT_COMMENT IN VARCHAR2);
  PROCEDURE DELETE_REVIEW(IN_ID IN NUMBER);
END REVIEW_PKG;

/
--------------------------------------------------------
--  DDL for Package USER_PKG
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE PACKAGE "GARIN"."USER_PKG" IS
  PROCEDURE CREATE_USER(IN_USER_NAME IN VARCHAR2, IN_PASSWORD IN VARCHAR2, IN_LNAME IN VARCHAR2, IN_FNAME IN VARCHAR2, IN_PHONENUMBER IN VARCHAR2, IN_EMAIL IN VARCHAR2, IN_ADDRESS IN VARCHAR2);
  PROCEDURE DELETE_USER(IN_USER_NAME IN VARCHAR2);
  PROCEDURE CHANGE_PASSWORD(IN_USER_NAME IN VARCHAR2, IN_NEW_PASSWORD IN VARCHAR2);
  PROCEDURE EDIT_USER(IN_USER_NAME IN VARCHAR2, IN_NEW_LNAME IN VARCHAR2, IN_NEW_FNAME IN VARCHAR2, IN_NEW_PHONENUMBER IN VARCHAR2, IN_NEW_EMAIL IN VARCHAR2, IN_NEW_ADDRESS IN VARCHAR2);
  PROCEDURE ADD_ROLE_TO_USER(IN_USER_NAME IN VARCHAR2, ROLE_NAME IN VARCHAR2);
  PROCEDURE REM_ROLE_AT_USER(IN_USER_NAME IN VARCHAR2, ROLE_NAME IN VARCHAR2);
  PROCEDURE ADD_ALL_ROLES_TO_USER(IN_USER_NAME IN VARCHAR2);
  PROCEDURE REM_ALL_ROLES_AT_USER(IN_USER_NAME IN VARCHAR2);
END USER_PKG;

/
--------------------------------------------------------
--  DDL for Package Body AUDIT_PKG
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE PACKAGE BODY "GARIN"."AUDIT_PKG" IS
  
  PROCEDURE REGISTER_AUDIT(IN_AUD_NAME IN VARCHAR2, IN_AUD_MODE IN CHAR, IN_ATABLE IN VARCHAR2) IS
  BEGIN
    SAVEPOINT BEFORE_REGISTER_AUDIT;
    INSERT INTO AUDIT_ENTITIES (AUD_NAME, AUD_MODE, ATABLE) VALUES (IN_AUD_NAME, IN_AUD_MODE, IN_ATABLE);
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK TO BEFORE_REGISTER_AUDIT;
      RAISE;
  END REGISTER_AUDIT;
  
  PROCEDURE CHANGE_AUDIT_MODE(IN_AUD_NAME IN VARCHAR2, IN_AUD_MODE IN CHAR) IS
  BEGIN
    SAVEPOINT BEFORE_CHANGE_AUDIT_MODE;
    UPDATE AUDIT_ENTITIES SET AUD_MODE = IN_AUD_MODE WHERE AUD_NAME = IN_AUD_NAME;
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK TO BEFORE_CHANGE_AUDIT_MODE;
      RAISE;
  END CHANGE_AUDIT_MODE;
  
  FUNCTION GET_AUDIT_MODE(IN_TABLE_NAME IN VARCHAR2) RETURN CHAR IS
    AUD_MODE_CHAR CHAR;
  BEGIN
    SELECT AUD_MODE INTO AUD_MODE_CHAR FROM AUDIT_ENTITIES WHERE ATABLE = IN_TABLE_NAME;
    
    RETURN AUD_MODE_CHAR;
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK TO BEFORE_GET_AUDIT_MODE;
      RAISE;
  END GET_AUDIT_MODE;
  
END AUDIT_PKG;

/
--------------------------------------------------------
--  DDL for Package Body CART_PKG
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE PACKAGE BODY "GARIN"."CART_PKG" AS

  PROCEDURE CREATE_CART(IN_USER_ID IN NUMBER) IS
  BEGIN
    SAVEPOINT BEFORE_CREATE_CART;
    INSERT INTO CART (ID, USER_ID) 
    VALUES (CART_SEQ.NEXTVAL, IN_USER_ID); 
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK TO BEFORE_CREATE_CART;
      RAISE;
  END CREATE_CART;
  
  PROCEDURE DELETE_CART(IN_ID IN NUMBER) IS
  BEGIN
    SAVEPOINT BEFORE_DELETE_CART;
    DELETE FROM CART WHERE ID = IN_ID;
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK TO BEFORE_DELETE_CART;
      RAISE;
  END DELETE_CART;
  
  PROCEDURE CREATE_ORDER(IN_CART_ID IN NUMBER, IN_GAME_ID IN NUMBER) IS
  BEGIN
    SAVEPOINT BEFORE_CREATE_ORDER; 
    INSERT INTO CART_ITEM (CART_ID, GAME_ID) 
    VALUES (IN_CART_ID, IN_GAME_ID);
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK TO BEFORE_CREATE_ORDER;
      RAISE;
  END CREATE_ORDER;
  
  PROCEDURE SET_ORDER_QUANTITY(IN_CART_ID IN NUMBER, IN_GAME_ID IN NUMBER, IN_QUANTITY IN NUMBER) IS
  BEGIN
    SAVEPOINT BEFORE_SET_ORDER_QUANTITY;
    UPDATE CART_ITEM SET QUANTITY = IN_QUANTITY WHERE CART_ID = IN_CART_ID AND GAME_ID = IN_GAME_ID;
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK TO BEFORE_SET_ORDER_QUANTITY;
      RAISE;
  END SET_ORDER_QUANTITY;
  
  PROCEDURE DELETE_ORDER(IN_CART_ID IN NUMBER, IN_GAME_ID IN NUMBER) IS
  BEGIN
    SAVEPOINT BEFORE_DELETE_ORDER;
    DELETE FROM CART_ITEM WHERE CART_ID = IN_CART_ID AND GAME_ID = IN_GAME_ID;
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK TO BEFORE_DELETE_ORDER;
      RAISE;
  END DELETE_ORDER;
  
END CART_PKG;

/
--------------------------------------------------------
--  DDL for Package Body CONSUMER_PKG
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE PACKAGE BODY "GARIN"."CONSUMER_PKG" AS

  PROCEDURE CREATE_CONSUMER(IN_USERNAME IN VARCHAR2, IN_EMAIL IN VARCHAR2, IN_PASSWORD_HASH IN VARCHAR2, IN_FNAME IN VARCHAR2, IN_LNAME IN VARCHAR2) IS
  SEQ_ID NUMBER;
  CNSMR_ID NUMBER;
  BEGIN
    SAVEPOINT BEFORE_CREATE_CONSUMER;
    CNSMR_ID := CNSMR_SEQ.NEXTVAL;
    INSERT INTO CONSUMER (ID, USERNAME, EMAIL, PASSWORD_HASH, FNAME, LNAME) 
    VALUES (CNSMR_ID, IN_USERNAME, IN_EMAIL, IN_PASSWORD_HASH, IN_FNAME, IN_LNAME);
    
    SEQ_ID := LOGACT_ACTION_SEQ.NEXTVAL;
    INSERT INTO LOGACT_ACTION VALUES (SEQ_ID, 'Создание пользователя', USER, SYSDATE, 'consumer', 'I');
    INSERT INTO LOGACT_DATA VALUES (SEQ_ID, 'consumer', CNSMR_ID, IN_USERNAME, IN_EMAIL, IN_PASSWORD_HASH, IN_FNAME, IN_LNAME, SYSDATE, null, null, null, null, null, null, null);
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK TO BEFORE_CREATE_CONSUMER;
      RAISE;
  END CREATE_CONSUMER;
  
  PROCEDURE EDIT_CONSUMER(IN_USER_ID IN NUMBER, IN_USERNAME IN VARCHAR2, IN_EMAIL IN VARCHAR2, IN_PASSWORD_HASH IN VARCHAR2, IN_FNAME IN VARCHAR2, IN_LNAME IN VARCHAR2) IS
  SEQ_ID NUMBER;
  OLD_ROW CONSUMER%ROWTYPE;
  BEGIN
    SAVEPOINT BEFORE_EDIT_CONSUMER;
    SELECT * INTO OLD_ROW FROM CONSUMER WHERE ID = IN_USER_ID;
    UPDATE CONSUMER SET USERNAME = IN_USERNAME, EMAIL = IN_EMAIL, PASSWORD_HASH = IN_PASSWORD_HASH, FNAME = IN_FNAME, LNAME = IN_LNAME
    WHERE ID = IN_USER_ID;
    
    SEQ_ID := LOGACT_ACTION_SEQ.NEXTVAL;
    INSERT INTO LOGACT_ACTION VALUES (SEQ_ID, 'Изменение пользователя', USER, SYSDATE, 'consumer', 'U');
    INSERT INTO LOGACT_DATA VALUES (SEQ_ID, 'consumer', IN_USER_ID, IN_USERNAME, IN_EMAIL, IN_PASSWORD_HASH, IN_FNAME, IN_LNAME, OLD_ROW.REG_DATE, OLD_ROW.ID, OLD_ROW.USERNAME, OLD_ROW.EMAIL, OLD_ROW.PASSWORD_HASH, OLD_ROW.FNAME, OLD_ROW.LNAME, OLD_ROW.REG_DATE);
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK TO BEFORE_EDIT_CONSUMER;
      RAISE;
  END EDIT_CONSUMER;
  
  PROCEDURE DELETE_CONSUMER(IN_USER_ID IN NUMBER) IS
    SEQ_ID NUMBER;
    DELETED_ROW CONSUMER%ROWTYPE;
  BEGIN
    SAVEPOINT BEFORE_DELETE_CONSUMER;
    SELECT * INTO DELETED_ROW FROM CONSUMER WHERE ID = IN_USER_ID;
    DELETE FROM CONSUMER WHERE ID = IN_USER_ID;
    
    SEQ_ID := LOGACT_ACTION_SEQ.NEXTVAL;
    INSERT INTO LOGACT_ACTION VALUES (SEQ_ID, 'Удаление пользователя', USER, SYSDATE, 'consumer', 'D');
    INSERT INTO LOGACT_DATA VALUES (SEQ_ID, 'consumer', null, null, null, null, null, null, null, DELETED_ROW.ID, DELETED_ROW.USERNAME, DELETED_ROW.EMAIL, DELETED_ROW.PASSWORD_HASH, DELETED_ROW.FNAME, DELETED_ROW.LNAME, DELETED_ROW.REG_DATE);
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK TO BEFORE_DELETE_CONSUMER;
      RAISE;
  END DELETE_CONSUMER;
  
END CONSUMER_PKG;

/
--------------------------------------------------------
--  DDL for Package Body GAME_PKG
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE PACKAGE BODY "GARIN"."GAME_PKG" AS

  PROCEDURE CREATE_GAME(IN_TITLE IN VARCHAR2, IN_DESCRIPTION IN VARCHAR2, IN_DEVELOPER_NAME IN VARCHAR2, IN_RATING IN NUMBER, IN_REL_DATE IN DATE) IS
  BEGIN
    SAVEPOINT BEFORE_CREATE_GAME;
    INSERT INTO GAME (ID, TITLE, DESCRIPTION, DEVELOPER_NAME, RATING, REL_DATE) 
    VALUES (GAME_SEQ.NEXTVAL, IN_TITLE, IN_DESCRIPTION, IN_DEVELOPER_NAME, IN_RATING, IN_REL_DATE); 
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK TO BEFORE_CREATE_GAME;
      RAISE;
  END CREATE_GAME;
  
  PROCEDURE EDIT_GAME(IN_GAME_ID IN NUMBER, IN_TITLE IN VARCHAR2, IN_DESCRIPTION IN VARCHAR2, IN_DEVELOPER_NAME IN VARCHAR2, IN_RATING IN NUMBER, IN_REL_DATE IN DATE) IS
  BEGIN
    SAVEPOINT BEFORE_EDIT_GAME;
    UPDATE GAME SET TITLE = IN_TITLE, DESCRIPTION = IN_DESCRIPTION, DEVELOPER_NAME = IN_DEVELOPER_NAME, RATING = IN_RATING, REL_DATE = IN_REL_DATE
    WHERE ID = IN_GAME_ID;
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK TO BEFORE_EDIT_GAME;
      RAISE;
  END EDIT_GAME;
  
  PROCEDURE DELETE_GAME(IN_GAME_ID IN NUMBER) IS
  BEGIN
    SAVEPOINT BEFORE_DELETE_GAME;
    DELETE FROM GAME G WHERE G.ID = IN_GAME_ID;
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK TO BEFORE_DELETE_GAME;
      RAISE;
  END DELETE_GAME;

END GAME_PKG;

/
--------------------------------------------------------
--  DDL for Package Body GROUP_PKG
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE PACKAGE BODY "GARIN"."GROUP_PKG" IS

  PROCEDURE CREATE_GROUP(IN_GROUP_NAME IN VARCHAR2) IS
  BEGIN
    SAVEPOINT BEFORE_CREATE_GROUP;
    INSERT INTO USRGROUP VALUES (GRP_SEQ.NEXTVAL, IN_GROUP_NAME); 
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK TO BEFORE_CREATE_GROUP;
      RAISE;
  END CREATE_GROUP;
  
  PROCEDURE DELETE_GROUP(IN_GROUP_ID IN NUMBER) IS
  BEGIN
    SAVEPOINT BEFORE_DELETE_GROUP;
    DELETE FROM USRGROUP U WHERE U.GRP_ID = IN_GROUP_ID;
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK TO BEFORE_DELETE_GROUP;
      RAISE;
  END DELETE_GROUP;
  
  PROCEDURE EDIT_GROUP(IN_GROUP_ID IN NUMBER, IN_NEW_GROUP_NAME IN VARCHAR2) IS
  BEGIN
    SAVEPOINT BEFORE_EDIT_GROUP;
    UPDATE USRGROUP SET GRP_NAME = IN_NEW_GROUP_NAME WHERE GRP_ID = IN_GROUP_ID;
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK TO BEFORE_EDIT_GROUP;
      RAISE;
  END EDIT_GROUP;
  
  PROCEDURE ADD_USER_TO_GROUP(IN_USER_ID IN NUMBER, IN_GROUP_ID IN NUMBER) IS
    COUNT_COND NUMBER;
  BEGIN
    SAVEPOINT BEFORE_ADD_USER_TO_GROUP;
    SELECT COUNT(1) INTO COUNT_COND FROM GRP_MEMBER WHERE USR_ID = IN_USER_ID AND GRP_ID = IN_GROUP_ID;
    IF COUNT_COND = 0 THEN
      INSERT INTO GRP_MEMBER (GRP_ID, USR_ID) VALUES (IN_GROUP_ID, IN_USER_ID);
    END IF;
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK TO BEFORE_ADD_USER_TO_GROUP;
      RAISE;
  END ADD_USER_TO_GROUP;
  
  PROCEDURE DELETE_USER_FROM_GROUP(IN_USER_ID IN NUMBER, IN_GROUP_ID IN NUMBER) IS
    COUNT_COND NUMBER;
  BEGIN
    SAVEPOINT BEFORE_DELETE_USER_FROM_GROUP;
    SELECT COUNT(1) INTO COUNT_COND FROM GRP_MEMBER WHERE USR_ID = IN_USER_ID AND GRP_ID = IN_GROUP_ID;
    IF COUNT_COND > 0 THEN
      DELETE FROM GRP_MEMBER WHERE USR_ID = IN_USER_ID AND GRP_ID = IN_GROUP_ID;
    END IF;
  EXCEPTION 
    WHEN OTHERS THEN
      ROLLBACK TO BEFORE_DELETE_USER_FROM_GROUP;
      RAISE;
  END DELETE_USER_FROM_GROUP;
  
  PROCEDURE ADD_ACTION(IN_ACT_NAME IN VARCHAR2) IS
  BEGIN
    SAVEPOINT BEFORE_ADD_ACTION;
    INSERT INTO ACTION (ACT_ID, ACT_NAME) VALUES (ACT_SEQ.NEXTVAL, IN_ACT_NAME);
  EXCEPTION 
    WHEN OTHERS THEN
      ROLLBACK TO BEFORE_ADD_ACTION;
      RAISE;
  END ADD_ACTION;
  
  PROCEDURE ADD_ACTION(IN_ACT_NAME IN VARCHAR2, IN_ACT_PARENT IN NUMBER) IS
  BEGIN
    SAVEPOINT BEFORE_ADD_ACTION;
      INSERT INTO ACTION (ACT_ID, ACT_NAME, ACT_PARENT) VALUES (ACT_SEQ.NEXTVAL, IN_ACT_NAME, IN_ACT_PARENT);
  EXCEPTION 
    WHEN OTHERS THEN
      ROLLBACK TO BEFORE_ADD_ACTION;
      RAISE;
  END ADD_ACTION;
  
  PROCEDURE DELETE_ACTION(IN_ACT_ID IN NUMBER) IS
  BEGIN
    SAVEPOINT BEFORE_DELETE_ACTION;
      DELETE FROM ACTION WHERE ACT_ID = IN_ACT_ID;
  EXCEPTION 
    WHEN OTHERS THEN
      ROLLBACK TO BEFORE_DELETE_ACTION;
      RAISE;
  END DELETE_ACTION;
  
  PROCEDURE ADD_ACT_TO_GROUP(IN_ACT_ID IN NUMBER, IN_GROUP_ID IN NUMBER) IS
    COUNT_COND NUMBER;
  BEGIN
    SAVEPOINT BEFORE_ADD_ACT_TO_GROUP;
    SELECT COUNT(1) INTO COUNT_COND FROM GRP_RIGHT WHERE ACT_ID = IN_ACT_ID AND GRP_ID = IN_GROUP_ID;
    IF COUNT_COND = 0 THEN
      INSERT INTO GRP_RIGHT (ACT_ID, GRP_ID) VALUES (IN_ACT_ID, IN_GROUP_ID);
    END IF;
  EXCEPTION 
    WHEN OTHERS THEN
      ROLLBACK TO BEFORE_ADD_ACT_TO_GROUP;
      RAISE;
  END ADD_ACT_TO_GROUP;
  
  PROCEDURE DELETE_ACT_FROM_GROUP(IN_ACT_ID IN NUMBER, IN_GROUP_ID IN NUMBER) IS
    COUNT_COND NUMBER;
  BEGIN
    SAVEPOINT BEFORE_DELETE_ACT_FROM_GROUP;
    SELECT COUNT(1) INTO COUNT_COND FROM GRP_RIGHT WHERE ACT_ID = IN_ACT_ID AND GRP_ID = IN_GROUP_ID;
    IF COUNT_COND > 0 THEN
      DELETE FROM GRP_RIGHT WHERE ACT_ID = IN_ACT_ID AND GRP_ID = IN_GROUP_ID;
    END IF;
  EXCEPTION 
    WHEN OTHERS THEN
      ROLLBACK TO BEFORE_DELETE_ACT_FROM_GROUP;
      RAISE;
  END DELETE_ACT_FROM_GROUP;

END GROUP_PKG;

/
--------------------------------------------------------
--  DDL for Package Body LIBRARY_PKG
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE PACKAGE BODY "GARIN"."LIBRARY_PKG" AS

  PROCEDURE CREATE_LIBRARY(IN_CNSMR_ID IN NUMBER, IN_GAME_ID IN NUMBER, IN_ADDED_DATE IN DATE, IN_HOURS_IN_GAME IN NUMBER) IS
  BEGIN
    SAVEPOINT BEFORE_CREATE_LIBRARY;
    INSERT INTO LIBRARY (CNSMR_ID, GAME_ID, ADDED_DATE, HOURS_IN_GAME) 
    VALUES (IN_CNSMR_ID, IN_GAME_ID, IN_ADDED_DATE, IN_HOURS_IN_GAME); 
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK TO BEFORE_CREATE_LIBRARY;
      RAISE;
  END CREATE_LIBRARY;
  
  PROCEDURE EDIT_LIBRARY(IN_CNSMR_ID IN NUMBER, IN_GAME_ID IN NUMBER, IN_ADDED_DATE IN DATE, IN_HOURS_IN_GAME IN NUMBER) IS
  BEGIN
    SAVEPOINT BEFORE_EDIT_LIBRARY;
    UPDATE LIBRARY SET ADDED_DATE = IN_ADDED_DATE, HOURS_IN_GAME = IN_HOURS_IN_GAME
    WHERE CNSMR_ID = IN_CNSMR_ID AND GAME_ID = IN_GAME_ID; 
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK TO BEFORE_EDIT_LIBRARY;
      RAISE;
  END EDIT_LIBRARY;
  
  PROCEDURE DELETE_LIBRARY(IN_CNSMR_ID IN NUMBER, IN_GAME_ID IN NUMBER) IS
  BEGIN
    SAVEPOINT BEFORE_DELETE_LIBRARY;
    DELETE FROM LIBRARY C WHERE C.CNSMR_ID = IN_CNSMR_ID AND C.GAME_ID = IN_GAME_ID; 
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK TO BEFORE_DELETE_LIBRARY;
      RAISE;
  END DELETE_LIBRARY;
  
END LIBRARY_PKG;

/
--------------------------------------------------------
--  DDL for Package Body LOGACT_PKG
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE PACKAGE BODY "GARIN"."LOGACT_PKG" IS
  
  PROCEDURE ROLLBACK IS
  ACT_ROW LOGACT_ACTION%ROWTYPE;
  BEGIN
    SAVEPOINT BEFORE_ROLLBACK;
    SELECT * INTO ACT_ROW FROM LOGACT_ACTION WHERE LOGACT_ID = (SELECT MAX(LOGACT_ID) FROM LOGACT_ACTION);
    
    IF ACT_ROW.LOGACT_OP = 'I' THEN
      EXECUTE IMMEDIATE 'DELETE FROM ' || UPPER(ACT_ROW.LOGACT_TABLE) || ' WHERE ID = (SELECT NEW_ID FROM LOGACT_DATA WHERE LOGDAT_ID = :1)' USING ACT_ROW.LOGACT_ID;
    ELSIF ACT_ROW.LOGACT_OP = 'U' THEN
      DECLARE
        ACTDATROW LOGACT_DATA%ROWTYPE;
      BEGIN
      SELECT * INTO ACTDATROW FROM LOGACT_DATA WHERE LOGDAT_ID = ACT_ROW.LOGACT_ID;
      --EXECUTE IMMEDIATE 'UPDATE ' || UPPER(ACT_ROW.LOGACT_TABLE) || ' SET USERNAME = ' || ACTDATROW.OLD_USERNAME ||
      --' EMAIL = ' || ACTDATROW.OLD_EMAIL ||
      --' PASSWORD_HASH = ' || ACTDATROW.OLD_PASSWORD_HASH ||
      --' FNAME = ' || ACTDATROW.OLD_FNAME ||
      --' LNAME = ' || ACTDATROW.OLD_LNAME ||
      --' WHERE ID = (SELECT OLD_ID FROM LOGACT_DATA WHERE LOGDAT_ID = :1)' USING ACT_ROW.LOGACT_ID;
      EXECUTE IMMEDIATE 'UPDATE ' || UPPER(ACT_ROW.LOGACT_TABLE) || 
                  ' SET USERNAME = :1, ' ||
                  'EMAIL = :2, ' ||
                  'PASSWORD_HASH = :3, ' ||
                  'FNAME = :4, ' ||
                  'LNAME = :5 ' ||
                  'WHERE ID = (SELECT OLD_ID FROM LOGACT_DATA WHERE LOGDAT_ID = :6)'
      USING ACTDATROW.OLD_USERNAME, ACTDATROW.OLD_EMAIL, ACTDATROW.OLD_PASSWORD_HASH, ACTDATROW.OLD_FNAME, ACTDATROW.OLD_LNAME, ACT_ROW.LOGACT_ID;
      END;
    ELSIF ACT_ROW.LOGACT_OP = 'D' THEN
      EXECUTE IMMEDIATE 'INSERT INTO ' || UPPER(ACT_ROW.LOGACT_TABLE) || 
                  ' (ID, USERNAME, EMAIL, PASSWORD_HASH, FNAME, LNAME, REG_DATE) ' ||
                  'SELECT OLD_ID, OLD_USERNAME, OLD_EMAIL, OLD_PASSWORD_HASH, OLD_FNAME, OLD_LNAME, OLD_REG_DATE ' ||
                  'FROM LOGACT_DATA WHERE LOGDAT_ID = :1' USING ACT_ROW.LOGACT_ID;
    ELSE 
      RAISE_APPLICATION_ERROR(-20001, 'Unknown action type');
    END IF;
    
    DELETE FROM LOGACT_DATA WHERE LOGDAT_ID = ACT_ROW.LOGACT_ID;
    DELETE FROM LOGACT_ACTION WHERE LOGACT_ID = ACT_ROW.LOGACT_ID;
    
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK TO BEFORE_ROLLBACK;
      RAISE;
  END ROLLBACK;
  
END LOGACT_PKG;

/
--------------------------------------------------------
--  DDL for Package Body REVIEW_PKG
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE PACKAGE BODY "GARIN"."REVIEW_PKG" AS

  PROCEDURE CREATE_REVIEW(IN_CNSMR_ID IN NUMBER, IN_GAME_ID IN NUMBER, IN_RATTING IN NUMBER, IN_TEXT_COMMENT IN VARCHAR2) IS
  BEGIN
    SAVEPOINT BEFORE_CREATE_REVIEW;
    INSERT INTO REVIEW (ID, CNSMR_ID, GAME_ID, RATING, TEXT_COMMENT) 
    VALUES (REVIEW_SEQ.NEXTVAL, IN_CNSMR_ID, IN_GAME_ID, IN_RATTING, IN_TEXT_COMMENT); 
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK TO BEFORE_CREATE_REVIEW;
      RAISE;
  END CREATE_REVIEW;
  
  PROCEDURE EDIT_REVIEW(IN_ID IN NUMBER, IN_CNSMR_ID IN NUMBER, IN_GAME_ID IN NUMBER, IN_RATTING IN NUMBER, IN_TEXT_COMMENT IN VARCHAR2) IS
  BEGIN
    SAVEPOINT BEFORE_EDIT_REVIEW;
    UPDATE REVIEW SET CNSMR_ID = IN_CNSMR_ID, GAME_ID = IN_GAME_ID, RATING = IN_RATTING, TEXT_COMMENT = IN_TEXT_COMMENT
    WHERE ID = IN_ID;
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK TO BEFORE_EDIT_REVIEW;
      RAISE;
  END EDIT_REVIEW;
  
  PROCEDURE DELETE_REVIEW(IN_ID IN NUMBER) IS
  BEGIN
    SAVEPOINT BEFORE_DELETE_REVIEW;
    DELETE FROM REVIEW R WHERE R.ID = IN_ID;
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK TO BEFORE_DELETE_REVIEW;
      RAISE;
  END DELETE_REVIEW;
  
END REVIEW_PKG;

/
--------------------------------------------------------
--  DDL for Package Body USER_PKG
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE PACKAGE BODY "GARIN"."USER_PKG" IS
  
  PROCEDURE CREATE_USER(IN_USER_NAME IN VARCHAR2, IN_PASSWORD IN VARCHAR2, IN_LNAME IN VARCHAR2, IN_FNAME IN VARCHAR2, IN_PHONENUMBER IN VARCHAR2, IN_EMAIL IN VARCHAR2, IN_ADDRESS IN VARCHAR2) IS
  BEGIN
    SAVEPOINT BEFORE_CREATE_USER;
    EXECUTE IMMEDIATE 'CREATE USER ' || DBMS_ASSERT.SIMPLE_SQL_NAME(IN_USER_NAME) || ' IDENTIFIED BY ' || DBMS_ASSERT.SIMPLE_SQL_NAME(IN_PASSWORD);
    INSERT INTO USR VALUES (USR_SEQ.NEXTVAL, IN_USER_NAME, IN_LNAME, IN_FNAME, IN_PHONENUMBER, IN_EMAIL, IN_ADDRESS);
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK TO BEFORE_CREATE_USER;
      RAISE;
  END CREATE_USER;
  
  PROCEDURE DELETE_USER(IN_USER_NAME IN VARCHAR2) IS
  BEGIN
    SAVEPOINT BEFORE_DELETE_USER;
    EXECUTE IMMEDIATE 'DROP USER ' || DBMS_ASSERT.SIMPLE_SQL_NAME(IN_USER_NAME);
    DELETE FROM USR WHERE USER_NAME = IN_USER_NAME;
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK TO BEFORE_DELETE_USER;
      RAISE;
  END DELETE_USER;
  
  PROCEDURE CHANGE_PASSWORD(IN_USER_NAME IN VARCHAR2, IN_NEW_PASSWORD IN VARCHAR2) IS
  BEGIN
    SAVEPOINT BEFORE_CHANGE_PASSWORD;
    EXECUTE IMMEDIATE 'ALTER USER ' || DBMS_ASSERT.SIMPLE_SQL_NAME(IN_USER_NAME) || ' IDENTIFIED BY ' || DBMS_ASSERT.SIMPLE_SQL_NAME(IN_NEW_PASSWORD);
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK TO BEFORE_CHANGE_PASSWORD;
      RAISE;
  END CHANGE_PASSWORD;
  
  PROCEDURE EDIT_USER(IN_USER_NAME IN VARCHAR2, IN_NEW_LNAME IN VARCHAR2, IN_NEW_FNAME IN VARCHAR2, IN_NEW_PHONENUMBER IN VARCHAR2, IN_NEW_EMAIL IN VARCHAR2, IN_NEW_ADDRESS IN VARCHAR2) IS
  BEGIN
    SAVEPOINT BEFORE_EDIT_USER;
    UPDATE USR SET LNAME = IN_NEW_LNAME, FNAME = IN_NEW_FNAME, PHONENUMBER = IN_NEW_PHONENUMBER, EMAIL = IN_NEW_EMAIL, ADDRESS = IN_NEW_ADDRESS WHERE USER_NAME = IN_USER_NAME;
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK TO BEFORE_EDIT_USER;
      RAISE;
  END EDIT_USER;
  
  PROCEDURE ADD_ROLE_TO_USER(IN_USER_NAME IN VARCHAR2, ROLE_NAME IN VARCHAR2) IS
  BEGIN
    SAVEPOINT BEFORE_ADD_ROLE;
    EXECUTE IMMEDIATE 'GRANT '|| DBMS_ASSERT.SIMPLE_SQL_NAME(ROLE_NAME) || ' TO ' || DBMS_ASSERT.SIMPLE_SQL_NAME(IN_USER_NAME);
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK TO BEFORE_ADD_ROLE;
      RAISE;
  END ADD_ROLE_TO_USER;
  
  PROCEDURE REM_ROLE_AT_USER(IN_USER_NAME IN VARCHAR2, ROLE_NAME IN VARCHAR2) IS
  BEGIN
    SAVEPOINT BEFORE_REM_ROLE;
    EXECUTE IMMEDIATE 'REVOKE '|| DBMS_ASSERT.SIMPLE_SQL_NAME(ROLE_NAME) || ' FROM ' || DBMS_ASSERT.SIMPLE_SQL_NAME(IN_USER_NAME);
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK TO BEFORE_REM_ROLE;
      RAISE;
  END REM_ROLE_AT_USER;
  
  PROCEDURE ADD_ALL_ROLES_TO_USER(IN_USER_NAME IN VARCHAR2) IS
  BEGIN
    SAVEPOINT BEFORE_ADD_ALL_ROLES;
    FOR R IN (SELECT GRANTED_ROLE FROM USER_ROLE_PRIVS) LOOP
      EXECUTE IMMEDIATE 'GRANT ' || DBMS_ASSERT.SIMPLE_SQL_NAME(R.GRANTED_ROLE) || ' TO ' || DBMS_ASSERT.SIMPLE_SQL_NAME(IN_USER_NAME);
    END LOOP;
    
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK TO BEFORE_ADD_ALL_ROLES;
      RAISE;
  END ADD_ALL_ROLES_TO_USER;
  
  PROCEDURE REM_ALL_ROLES_AT_USER(IN_USER_NAME IN VARCHAR2) IS
  BEGIN
    SAVEPOINT BEFORE_REM_ALL_ROLES;
    FOR R IN (SELECT GRANTED_ROLE FROM USER_ROLE_PRIVS) LOOP
      EXECUTE IMMEDIATE 'REVOKE ' || DBMS_ASSERT.SIMPLE_SQL_NAME(R.GRANTED_ROLE) || ' FROM ' || DBMS_ASSERT.SIMPLE_SQL_NAME(IN_USER_NAME);
    END LOOP;
  EXCEPTION
    WHEN OTHERS THEN
      ROLLBACK TO BEFORE_REM_ALL_ROLES;
      RAISE;
  END REM_ALL_ROLES_AT_USER;

END USER_PKG;

/
--------------------------------------------------------
--  Constraints for Table USRGROUP
--------------------------------------------------------

  ALTER TABLE "GARIN"."USRGROUP" MODIFY ("GRP_ID" NOT NULL ENABLE);
  ALTER TABLE "GARIN"."USRGROUP" MODIFY ("GRP_NAME" NOT NULL ENABLE);
  ALTER TABLE "GARIN"."USRGROUP" ADD PRIMARY KEY ("GRP_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table GRP_MEMBER
--------------------------------------------------------

  ALTER TABLE "GARIN"."GRP_MEMBER" MODIFY ("GRP_ID" NOT NULL ENABLE);
  ALTER TABLE "GARIN"."GRP_MEMBER" MODIFY ("USR_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table review
--------------------------------------------------------

  ALTER TABLE "GARIN"."review" MODIFY ("RATING" NOT NULL ENABLE);
  ALTER TABLE "GARIN"."review" MODIFY ("CNSMR_ID" NOT NULL ENABLE);
  ALTER TABLE "GARIN"."review" ADD CONSTRAINT "review_pk" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table AUDIT_ACTION
--------------------------------------------------------

  ALTER TABLE "GARIN"."AUDIT_ACTION" MODIFY ("AUDACT_ID" NOT NULL ENABLE);
  ALTER TABLE "GARIN"."AUDIT_ACTION" MODIFY ("AUDACT_TABLE" NOT NULL ENABLE);
  ALTER TABLE "GARIN"."AUDIT_ACTION" ADD CONSTRAINT "AUDIT_ACTION_PK" PRIMARY KEY ("AUDACT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table LOGACT_ACTION
--------------------------------------------------------

  ALTER TABLE "GARIN"."LOGACT_ACTION" MODIFY ("LOGACT_ID" NOT NULL ENABLE);
  ALTER TABLE "GARIN"."LOGACT_ACTION" ADD CONSTRAINT "LOGACT_ACTION_PK" PRIMARY KEY ("LOGACT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "GARIN"."LOGACT_ACTION" MODIFY ("LOGACT_USER" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table GRP_RIGHT
--------------------------------------------------------

  ALTER TABLE "GARIN"."GRP_RIGHT" MODIFY ("ACT_ID" NOT NULL ENABLE);
  ALTER TABLE "GARIN"."GRP_RIGHT" MODIFY ("GRP_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table game
--------------------------------------------------------

  ALTER TABLE "GARIN"."game" ADD CONSTRAINT "game_pk" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table consumer
--------------------------------------------------------

  ALTER TABLE "GARIN"."consumer" MODIFY ("ID" NOT NULL ENABLE);
  ALTER TABLE "GARIN"."consumer" ADD CONSTRAINT "consumer_PK" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table AUDIT_ENTITIES
--------------------------------------------------------

  ALTER TABLE "GARIN"."AUDIT_ENTITIES" MODIFY ("AUD_NAME" NOT NULL ENABLE);
  ALTER TABLE "GARIN"."AUDIT_ENTITIES" MODIFY ("AUD_MODE" NOT NULL ENABLE);
  ALTER TABLE "GARIN"."AUDIT_ENTITIES" MODIFY ("ATABLE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table cart
--------------------------------------------------------

  ALTER TABLE "GARIN"."cart" ADD CONSTRAINT "cart_pk" PRIMARY KEY ("ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table USR
--------------------------------------------------------

  ALTER TABLE "GARIN"."USR" MODIFY ("USR_ID" NOT NULL ENABLE);
  ALTER TABLE "GARIN"."USR" MODIFY ("USER_NAME" NOT NULL ENABLE);
  ALTER TABLE "GARIN"."USR" ADD CONSTRAINT "USR_PK" PRIMARY KEY ("USR_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ACTION
--------------------------------------------------------

  ALTER TABLE "GARIN"."ACTION" MODIFY ("ACT_ID" NOT NULL ENABLE);
  ALTER TABLE "GARIN"."ACTION" ADD PRIMARY KEY ("ACT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table AUDIT_DATA
--------------------------------------------------------

  ALTER TABLE "GARIN"."AUDIT_DATA" ADD CONSTRAINT "F_AUDIT_DATA_AUDIT_ACTION" FOREIGN KEY ("AUDDAT_ID")
	  REFERENCES "GARIN"."AUDIT_ACTION" ("AUDACT_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table cart
--------------------------------------------------------

  ALTER TABLE "GARIN"."cart" ADD CONSTRAINT "F_cart_consumer" FOREIGN KEY ("USER_ID")
	  REFERENCES "GARIN"."consumer" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table cart_item
--------------------------------------------------------

  ALTER TABLE "GARIN"."cart_item" ADD CONSTRAINT "F_cart_item_cart" FOREIGN KEY ("CART_ID")
	  REFERENCES "GARIN"."cart" ("ID") ENABLE;
  ALTER TABLE "GARIN"."cart_item" ADD CONSTRAINT "F_cart_item_game" FOREIGN KEY ("GAME_ID")
	  REFERENCES "GARIN"."game" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table GRP_MEMBER
--------------------------------------------------------

  ALTER TABLE "GARIN"."GRP_MEMBER" ADD CONSTRAINT "FK_GRP_MEMBER_USR" FOREIGN KEY ("USR_ID")
	  REFERENCES "GARIN"."USR" ("USR_ID") ENABLE;
  ALTER TABLE "GARIN"."GRP_MEMBER" ADD CONSTRAINT "FK_GRP_MEMBER_USRGROUP" FOREIGN KEY ("GRP_ID")
	  REFERENCES "GARIN"."USRGROUP" ("GRP_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table GRP_RIGHT
--------------------------------------------------------

  ALTER TABLE "GARIN"."GRP_RIGHT" ADD CONSTRAINT "FK_GRP_RIGHT_USRGROUP" FOREIGN KEY ("GRP_ID")
	  REFERENCES "GARIN"."USRGROUP" ("GRP_ID") ENABLE;
  ALTER TABLE "GARIN"."GRP_RIGHT" ADD CONSTRAINT "FK_GRP_RIGHT_ACTION" FOREIGN KEY ("ACT_ID")
	  REFERENCES "GARIN"."ACTION" ("ACT_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table library
--------------------------------------------------------

  ALTER TABLE "GARIN"."library" ADD CONSTRAINT "F_library_consumer" FOREIGN KEY ("CNSMR_ID")
	  REFERENCES "GARIN"."consumer" ("ID") ENABLE;
  ALTER TABLE "GARIN"."library" ADD CONSTRAINT "F_library_game" FOREIGN KEY ("GAME_ID")
	  REFERENCES "GARIN"."game" ("ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table LOGACT_DATA
--------------------------------------------------------

  ALTER TABLE "GARIN"."LOGACT_DATA" ADD CONSTRAINT "F_LOGACT_DATA_LOGACT_ACTION" FOREIGN KEY ("LOGDAT_ID")
	  REFERENCES "GARIN"."LOGACT_ACTION" ("LOGACT_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table review
--------------------------------------------------------

  ALTER TABLE "GARIN"."review" ADD CONSTRAINT "F_review_consumer" FOREIGN KEY ("CNSMR_ID")
	  REFERENCES "GARIN"."consumer" ("ID") ENABLE;
  ALTER TABLE "GARIN"."review" ADD CONSTRAINT "F_review_game" FOREIGN KEY ("GAME_ID")
	  REFERENCES "GARIN"."game" ("ID") ENABLE;
